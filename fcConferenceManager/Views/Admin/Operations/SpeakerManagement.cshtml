@using Kendo.Mvc.UI
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool bParticipationTable = false;
    System.Data.DataTable DataParticipation = (System.Data.DataTable)ViewBag.ddParticipation;
    System.Text.StringBuilder ParticipationHtmlString = new System.Text.StringBuilder();
    System.Text.StringBuilder NotInterest = new System.Text.StringBuilder();
    if (DataParticipation != null && DataParticipation.Rows.Count>0)
    {
        bParticipationTable = true;
        ParticipationHtmlString.Append("<option value='0'>None</option>");
        foreach (System.Data.DataRow dr in DataParticipation.Rows)
        {
            string text = (System.DBNull.Value != dr["strText"]) ? dr["strText"].ToString() : "";
            string pKey = (System.DBNull.Value != dr["pKey"]) ? dr["pKey"].ToString() : "0";
            NotInterest.Append("<option value='"+ pKey +"'>" + text + "</option>");
        }
        ParticipationHtmlString.Append(NotInterest);
    }
    fcConferenceManager.Models.SpeakerGridFilter gridFilterModel = new fcConferenceManager.Models.SpeakerGridFilter();
    if (ViewBag.SpeakerModel != null)
    {
        gridFilterModel  = (fcConferenceManager.Models.SpeakerGridFilter)ViewBag.SpeakerModel;
    }
}
<link href="/Content/kendo.common-material.min.css" rel="stylesheet" type="text/css" />
<link href="/Content/kendo.material.min.css" rel="stylesheet" type="text/css" />
<link href="/Css/multiple-select.css" rel="stylesheet" />
<script src="/Scripts/kendo/2021.3.1207/kendo.all.min.js" type="text/javascript"></script>
<script src="/Scripts/kendo/2021.3.1207/kendo.aspnetmvc.min.js" type="text/javascript"></script>
<script src="/Scripts/multiple-select.js" type="text/javascript"></script>
<link href="/Css/KendoCustom.css" rel="stylesheet" />
<style>
    .gridEditButton, .gridNotesEditButton
    {
        text-indent: 9999px;
        overflow: hidden;
        background-color: transparent !important;
        border: none !important;
        box-shadow: none !important;
        color: transparent !important;
        margin: 0 0 0 10px !important;
        padding: 0 !important;
        background-position: left !important;
        background-image: url(/images/icons/gridgray.png) !important;
        background-repeat: no-repeat;
    }

    .gridEditButton:active, .gridEditButton:hover,
    .gridNotesEditButton:active, .gridNotesEditButton:hover
    {
        border: none !important;
        box-shadow: none !important;
        color: transparent !important;
        margin: 0 0 0 10px !important;
        padding: 0 !important;
        background-position: left !important;
    }

    .Font11
    {
        font-size: 11pt;
        color: #000;
    }

    .imgLabel
    {
        text-align: center;
        border-radius: 8px;
    }

    #grid > .k-grid-header > div > table,
    #grid > .k-grid-content > table
    {
        width: 100% !important;
    }

    .k-pager-wrap .k-dropdown
    {
        width: 5.2em;
        display: none !important;
    }

    .k-i-expand, .k-i-collapse
    {
        opacity: 1 !important;
        color: orange !important;
        font-size: 14px !important;
    }

    .tooltip
    {
        position: relative;
        display: inline-block;
        opacity: 1 !important;
        z-index: 1
    }

    .tooltip .tooltiptext
    {
        visibility: hidden;
        width: 120px;
        background-color: black;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 5px 0;
        position: absolute;
        z-index: 1;
        top: 150%;
        left: 50%;
        margin-left: -60px;
    }

    .tooltip .tooltiptext::after
    {
        content: "";
        position: absolute;
        bottom: 100%;
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color: transparent transparent black transparent;
    }

    .tooltip:hover .tooltiptext
    {
        visibility: visible;
    }

    .PerClass
    {
        color: blue;
        cursor: pointer;
    }

    .Font10 a
    {
        font-size: 10pt !important;
        color: black !important;
        text-decoration: none !important;
    }

    div[id*="ddSessions"] table td
    {
        border-bottom: none;
    }

    .bold
    {
        font-weight: bold !important;
    }

    /* th.k-header[data-title="Contact Name"]
    {
        text-align: center;
    }*/

    @@media(max-width:1300px)
    {
        .custom-flex-wrap
        {
            flex-wrap: wrap;
        }
    }

    .SectionTitle
    {
        color: #00008b;
        font-weight: 700;
    }
</style>
<div class="container-fluid mt-3">
    <div class="row">
        <div class="col-md-6">
            <div class="d-md-flex flex-wrap">
                <h2>@ViewBag.PageTitle</h2>
                <div class="ms-md-1">
                    <input type="image" id="btnExport" value="Download Spreadsheet" title="Download Spreadsheet" src="/images/icons/excel.png" style="height: 32px;" />
                    <input type="image" id="btnReset" value="Refresh Page" title="Refresh Page" src="/images/icons/undo.png" style="height: 32px;" />
                    <input type="image" id="btnSearch" title="Search" src="/images/icons/redo.png" style="height: 32px; " />
                </div>
            </div>
        </div>
        <div class="col-md-6 justify-content-lg-end align-items-center flex-wrap ">
            <a id="cmdReturn" href="@ViewBag.ReturnUrl" type="button" class="btn ms-1 mb-1 mb-1 pull-right">Return</a>
            <button type="button" id="btnReplaceSpeaker" class="btn ms-1 pull-right" style="display:none;">Replace Speaker</button>
            <button type="button" id="btnChangeOwnerShip" class="btn ms-1 pull-right" style="display:none;">Change Contact</button>
            <button type="button" id="btnAdditional" class="btn ms-1 pull-right" style="display:none;">Other Follow Up</button>
            <button type="button" id="btncreatePossiblespeaker" class="btn pull-right" style="display:none;">Create Possible Speaker</button>
        </div>
    </div>
    <div class="row">
        <div style="display:inline-block;width:100%;">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="idPeople" data-bs-toggle="tab" data-bs-target="#view" type="button" role="tab" aria-controls="View" aria-selected="false">People</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="idActivities" href="/SpeakerSessionView" type="button">Activities</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="idAssignment" href="/EventAssignments" type="button">Assignments</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="idProposals" href="/SpeakerProposal" type="button">Proposals</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="idOther" href="/SpeakerFollowup" type="button">Other Follow Up</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="idPreviousSpeaker" href="/PreviousSpeaker" type="button">Previous Speakers</a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="view" role="tabpanel">
                    <div class="row ps-2  px-0">
                        <div class="col-md-12 ps-1">
                            <img id="btncollapseFilter" src="@((ViewBag.IsCollapse) ? "/Images/navigation/downtriangle.png" : "/Images/navigation/righttriangle.png")" class="toggleClick" height="16" data-bs-toggle="collapse" data-bs-target="#CollapsedFilter" aria-expanded="false" aria-controls="collapseExample" style="cursor:pointer;" />
                            <div class="collapse filterBackground  @((ViewBag.IsCollapse) ? "show" : "")" id="CollapsedFilter">
                                <div class="col-lg-12 d-md-flex align-items-end custom-flex-wrap">
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Interested in Event: </label>
                                        </div>
                                        <div>
                                            <select id="ddlInterested" multiple>
                                                @{
                                                    System.Data.DataTable DataInterestedDL = (System.Data.DataTable)ViewBag.ddlInterested;
                                                    if (DataInterestedDL != null && DataInterestedDL.Rows.Count>0)
                                                    {
                                                        foreach (System.Data.DataRow dr in DataInterestedDL.Rows)
                                                        {
                                                            string text = (System.DBNull.Value != dr["strText"]) ? dr["strText"].ToString() : "";
                                                            string pKey = (System.DBNull.Value != dr["pKey"]) ? dr["pKey"].ToString() : "0";
                                                            @Html.Raw("<option value='"+ pKey +"'>" + text + "</option>");
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Not interested in Event: </label>
                                        </div>
                                        <div>
                                            <select id="ddlNotiner" multiple>
                                                @{
                                                    if (bParticipationTable)
                                                    {
                                                        @Html.Raw(NotInterest.ToString());
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Follow Up Date: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().DropDownList().Name("ddFollowUpDate").DataTextField("Text")
                                            .DataValueField("Value")
                                            .BindTo(new List<SelectListItem>() {
                                                          new SelectListItem() { Text ="All", Value = "0" },
                                                          new SelectListItem() { Text ="Past", Value = "8" },
                                                          new SelectListItem() { Text ="Past & Today", Value = "5" },
                                                          new SelectListItem() { Text ="Today", Value = "1" },
                                                          new SelectListItem() { Text ="Tomorrow", Value = "10" },
                                                          new SelectListItem() { Text ="Next 7 Days", Value = "2" },
                                                          new SelectListItem() { Text ="Future", Value = "9" },
                                                          new SelectListItem() { Text ="Do Not Follow Up", Value = "-3" },
                                                          new SelectListItem() { Text ="No Follow Up Date", Value = "-4" },
                                                          new SelectListItem() { Text ="Unassigned & No Date", Value = "-5" },
                                                          new SelectListItem() { Text ="Other", Value = "3" } }).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:180px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">  </label>
                                        </div>
                                        <div class="col-xs-12 d-flex">
                                            @(Html.Kendo().DatePicker().Name("dpStart")
                                                        .Format("{0:dd/MM/yyyy}")
                                                        .Enable(false)
                                                        .DateInput()
                                                        .Value("10/10/2011").HtmlAttributes(new { style = "width: 100%;min-width:90px;", title = "datepicker" }))
                                            <label class="ms-1 me-1"> thru </label>
                                            @(Html.Kendo().DatePicker().Name("dpEnd")
                                                        .Format("{0:dd/MM/yyyy}")
                                                        .Enable(false)
                                                        .DateInput()
                                                        .Value("10/10/2011").HtmlAttributes(new { style = "width: 100%;min-width:90px;", title = "datepicker" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Last Name, First Name: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().TextBox().Name("txtLName").HtmlAttributes(new { style = "width: 125px;", title = "Last Name, First Name ,Nickname" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Organization: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().TextBox().Name("txtOrganization").HtmlAttributes(new { style = "width: 160px;", title = "Organization" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Search: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().TextBox().Name("txtSearch").HtmlAttributes(new { style = "width: 80px;", title = "Filters for: LastName,FirstName,ContactName,City,State,Phone,Job Title,Phone Type,Email" }))
                                        </div>
                                    </div>
                                </div>
                                <div class="d-md-flex align-items-end flex-wrap">
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Organization Type: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddOrganizationType = new List<SelectListItem>() { new SelectListItem() { Text ="All", Value = "0" } };
                                                if (ViewBag.ddOrgType != null)
                                                {
                                                    ddOrganizationType.AddRange((List<SelectListItem>)ViewBag.ddOrgType);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList().Name("ddOrganizationType").DataTextField("Text")
          .DataValueField("Value").BindTo(ddOrganizationType).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:120px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Speaker ID: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().TextBox().Name("txtID").HtmlAttributes(new { style = "width: 80px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Activity Status: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddSesStatus = new List<SelectListItem>() {
                                                    new SelectListItem() { Text ="All", Value = "0" },
                                                    new SelectListItem() { Text ="No Sessions", Value = "-3" },
                                                    new SelectListItem() { Text ="Open", Value = "-1" },
                                                    new SelectListItem() { Text ="Chair Assigned", Value = "-2" },
                                                };
                                                if (ViewBag.ddSesStatus != null)
                                                {
                                                    ddSesStatus.AddRange((List<SelectListItem>)ViewBag.ddSesStatus);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
                  .Name("ddSesStatus").DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(ddSesStatus).Value("0").HtmlAttributes(new { style = "width:120px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Past Activity: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddPastActivity = new List<SelectListItem>() { new SelectListItem() { Text ="Select", Value = "0" } };
                                                if (ViewBag.ddPastActivity != null)
                                                {
                                                    ddPastActivity.AddRange((List<SelectListItem>)ViewBag.ddPastActivity);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
                  .Name("ddPastActivity").DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(ddPastActivity).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:90px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">User's Country: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddCountryList = new List<SelectListItem>();
                                                ddCountryList.Add(new SelectListItem() { Text ="--All--", Value = "0" });
                                                ddCountryList.Add(new SelectListItem() { Text ="United States", Value = "1" });
                                                ddCountryList.Add(new SelectListItem() { Text ="Canada", Value = "2" });
                                                ddCountryList.Add(new SelectListItem() { Text ="U.S. and Canada", Value = "-1" });
                                                ddCountryList.Add(new SelectListItem() { Text ="International", Value = "-2" });
                                                ddCountryList.Add(new SelectListItem() { Text ="United Kingdom", Value = "3" });
                                                if (ViewBag.ddCountry != null)
                                                {
                                                    ddCountryList.AddRange((List<SelectListItem>)ViewBag.ddCountry);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
          .Name("ddCountry").DataTextField("Text")
          .DataValueField("Value")
          .BindTo(ddCountryList).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:150px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Time Zone to Call: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddTimeZoneList = new List<SelectListItem>() { new SelectListItem() { Text ="All", Value = "-14" }, };
                                                if (ViewBag.ddTimeZone != null)
                                                {
                                                    ddTimeZoneList.AddRange((List<SelectListItem>)ViewBag.ddTimeZone);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
.Name("ddTimeZone").DataTextField("Text")
.DataValueField("Value")
.BindTo(ddTimeZoneList).Value("-14").HtmlAttributes(new { style = "width: 100%;min-width:150px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Final: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddFinalDispList = new List<SelectListItem>() {
                                                    new SelectListItem() { Text ="All", Value = "0" },
                                                    new SelectListItem() { Text ="Not Set", Value = "-1" },
                                                    new SelectListItem() { Text ="Non-Speakers", Value = "-2" },
                                                };
                                                if (ViewBag.ddFinalDisp != null)
                                                {
                                                    ddFinalDispList.AddRange((List<SelectListItem>)ViewBag.ddFinalDisp);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
.Name("ddFinalDisp").DataTextField("Text")
.DataValueField("Value")
.BindTo(ddFinalDispList).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:150px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Contacted: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().DropDownList()
.Name("ddContacted").DataTextField("Text")
.DataValueField("Value")
.BindTo(new List<SelectListItem>() {
                                                          new SelectListItem() { Text ="All", Value = "0" },
                                                          new SelectListItem() { Text ="Yes", Value = "1" },
                                                          new SelectListItem() { Text ="No", Value = "2" },
}).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:90px;" }))
                                        </div>
                                    </div>
                                </div>
                                <div class="d-md-flex align-items-end flex-wrap">
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall">Account Status:</label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddAccStatus = new List<SelectListItem>() { new SelectListItem() { Text ="All", Value = "0" } };
                                                if (ViewBag.ddAccStatus != null)
                                                {
                                                    ddAccStatus.AddRange((List<SelectListItem>)ViewBag.ddAccStatus);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
                  .Name("ddAccStatus").DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(ddAccStatus).Value("1").HtmlAttributes(new { style = "width: 100%;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Speaker Status: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddSpeakerStatus = new List<SelectListItem>() {
                                                   new SelectListItem() { Text ="All", Value = "0" },
                                                    new SelectListItem() { Text ="Take home lesson missing", Value = "-3" }
                                                };
                                                if (ViewBag.ddSpeakerStatus != null)
                                                {
                                                    ddSpeakerStatus.AddRange((List<SelectListItem>)ViewBag.ddSpeakerStatus);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
.Name("ddSpeakerStatus").DataTextField("Text")
.DataValueField("Value")
.BindTo(ddSpeakerStatus).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:210px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Speaker Rating: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().DropDownList()
.Name("ddSpeakerRating").DataTextField("Text")
.DataValueField("Value")
.BindTo(new List<SelectListItem>() {
                                                    new SelectListItem() { Text ="All", Value = "0" },
                                                    new SelectListItem() { Text ="Excellent", Value = ViewBag.RATING_EXCELLENT.ToString() },
                                                    new SelectListItem() { Text ="Good", Value = ViewBag.RATING_GOOD.ToString() },
                                                    new SelectListItem() { Text ="Fair", Value =  ViewBag.RATING_FAIR.ToString() },
                                                    new SelectListItem() { Text ="Poor", Value =  ViewBag.RATING_POOR.ToString() },
                                                    new SelectListItem() { Text ="Awful", Value =ViewBag.RATING_AWFUL.ToString() },
}).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:90px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Attending: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddStatus = new List<SelectListItem>() {
                                                    new SelectListItem() { Text ="All", Value = "0" },
                                                };
                                                if (ViewBag.ddStatus != null)
                                                {
                                                    ddStatus.AddRange((List<SelectListItem>)ViewBag.ddStatus);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
                  .Name("ddStatus").DataTextField("Text")
                  .DataValueField("Value")
                  .BindTo(ddStatus).Value("0").HtmlAttributes(new { style = "width: 70px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Updated: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().DropDownList()
          .Name("ddDateRange").DataTextField("Text")
          .DataValueField("Value")
          .BindTo(new List<SelectListItem>() {
                                                          new SelectListItem() { Text ="All", Value = "0" },
                                                          new SelectListItem() { Text ="Past Year", Value = "1" },
                                                          new SelectListItem() { Text ="Past Month", Value = "2"},
                                                          new SelectListItem() { Text ="Past Week", Value ="3"  },
                                                          new SelectListItem() { Text ="Past Day", Value ="4"  },
                                                          new SelectListItem() { Text ="Other", Value ="5" },
                                                          new SelectListItem() { Text ="Not Updated Past Month", Value ="6" },
                                                          new SelectListItem() { Text ="Not Updated Past Week", Value ="7" },
                                                          new SelectListItem() { Text ="Not Updated Past Day", Value ="8" },
            }).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:150px;" }))
                                        </div>
                                    </div>
                                    <div class="mb-2">
                                        <div>
                                            <label class="lblSmall">  </label>
                                        </div>
                                        <div>
                                            <div class="col-xs-12 d-flex">
                                                @(Html.Kendo().DatePicker()
.Name("dpStart2")
.Value("10/10/2011")
.Format("{0:dd/MM/yyyy}")
.Enable(false)
.DateInput()
.HtmlAttributes(new { style = "width: 100%;min-width:90px;", title = "datepicker" }))
                                                <label class="ms-1 me-1" style="vertical-align:middle"> thru </label>
                                                @(Html.Kendo().DatePicker()
.Name("dpEnd2")
.Format("")
.Enable(false)
.Format("{0:dd/MM/yyyy}")
.Value("10/10/2011")
.DateInput()
.HtmlAttributes(new { style = "width: 100%;min-width:90px;", title = "datepicker" }))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-md-flex align-items-end flex-wrap">
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Prior speaker at event: </label>
                                        </div>
                                        <div>
                                            <select id="priorSpeakerAtEvent" multiple>
                                                @{
                                                    if (bParticipationTable)
                                                    {
                                                        @Html.Raw(ParticipationHtmlString.ToString());
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Participation Event: </label>
                                        </div>
                                        <div>
                                            <select id="participationEvent" multiple>
                                                @{
                                                    if (bParticipationTable)
                                                    {
                                                        @Html.Raw(ParticipationHtmlString.ToString());
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Interest Event: </label>
                                        </div>
                                        <div>
                                            <select id="ddEventInterest" multiple>
                                                <option value="0">None</option>
                                                @{
                                                    System.Data.DataTable DataEventInterest = (System.Data.DataTable)ViewBag.ddEventInterest;
                                                    if (DataEventInterest != null && DataEventInterest.Rows.Count>0)
                                                    {
                                                        foreach (System.Data.DataRow dr in DataEventInterest.Rows)
                                                        {
                                                            string text = (System.DBNull.Value != dr["strText"]) ? dr["strText"].ToString() : "";
                                                            string pKey = (System.DBNull.Value != dr["pKey"]) ? dr["pKey"].ToString() : "0";
                                                            @Html.Raw("<option value='"+ pKey +"'>" + text + "</option>");
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Flag: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().DropDownList().Name("ddSpeakerFlag").DataTextField("strText").DataValueField("pKey").Height(400)
                                                  .DataSource(source =>
                                                     source.Custom()
                                                     .Group(group => group.Add("groupId", typeof(string)))
                                                     .Transport(transport => transport
                                                     .Read(read => {
                                                         read.Url("/Operations/GetSpeakerFlagGrouped").DataType("json").Type(HttpVerbs.Get);
                                                     })).ServerFiltering(false)
                                                   ).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:200px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Speaker Contact: </label>
                                        </div>
                                        <div>
                                            <select id="ddFollowupRights2" multiple>
                                                @{
                                                    System.Data.DataTable DataSpeakerContact = (System.Data.DataTable)ViewBag.ddFollowupRights2;
                                                    if (DataSpeakerContact != null && DataSpeakerContact.Rows.Count>0)
                                                    {
                                                        foreach (System.Data.DataRow dr in DataSpeakerContact.Rows)
                                                        {
                                                            string text = (System.DBNull.Value != dr["strText"]) ? dr["strText"].ToString() : "";
                                                            string pKey = (System.DBNull.Value != dr["pKey"]) ? dr["pKey"].ToString() : "0";
                                                            @Html.Raw("<option value='"+ pKey +"'>" + text + "</option>");
                                                        }
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Track: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddTrackList = new List<SelectListItem>() { new SelectListItem() { Text ="All", Value = "0" } };
                                                if (ViewBag.ddTrack != null)
                                                {
                                                    ddTrackList.AddRange((List<SelectListItem>)ViewBag.ddTrack);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
          .Name("ddTrackList").DataTextField("Text")
          .DataValueField("Value")
          .BindTo(ddTrackList).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:200px;" }))
                                        </div>
                                    </div>
                                    <div style="display:none;">
                                        <div>
                                            <label class="lblSmall">  </label>
                                        </div>
                                        <div>
                                            <button type="button" id="cmdAnn" class="btn">Announcement Status</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-md-flex align-items-end flex-wrap">
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Contact Notes: </label>
                                        </div>
                                        <div>
                                            @(Html.Kendo().TextBox().Name("txtContactNotes").HtmlAttributes(new { style = "width: 125px;" }))
                                        </div>
                                    </div>
                                    <div class="me-md-2 mb-2">
                                        <div>
                                            <label class="lblSmall"> Results: </label>
                                        </div>
                                        <div>
                                            @{
                                                List<SelectListItem> ddResultsList = new List<SelectListItem>() { new SelectListItem() { Text ="--All--", Value = "0" } };
                                                if (ViewBag.ddResults != null)
                                                {
                                                    ddResultsList.AddRange((List<SelectListItem>)ViewBag.ddResults);
                                                }
                                            }
                                            @(Html.Kendo().DropDownList()
                                                      .Name("ddResultsList").DataTextField("Text")
                                                      .DataValueField("Value")
                                                      .BindTo(ddResultsList).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:200px;" }))
                                        </div>
                                    </div>
                                </div>
                                <div class="d-md-flex align-items-end flex-wrap">
                                    @{
                                        var htmlAttributes = new Dictionary<string, object> { { "class", "ckCheckItem" } };
                                    }
                                    <a id="lnkSendAnnouncement" class="btnLink me-2 btn-link">Send Announcement</a>
                                    <a id="lnkaddAccGroup" class="btnLink me-2 btn-link">Add to Account Group</a>
                                    <label class="lblSmall me-2 align-items-center" for="ckFollowUp" style="display:none;">@Html.CheckBox("ckFollowUp", gridFilterModel.bSpkrMgRecent, htmlAttributes) &nbsp;Followup Notes </label>
                                    <label class="lblSmall me-2 align-items-center" for="ckRecentNote" style="display:none;">@Html.CheckBox("ckRecentNote", gridFilterModel.bSpkrMgNote, htmlAttributes) &nbsp; Most Recent Note</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="ckPriorities">@Html.CheckBox("ckPriorities", gridFilterModel.chkPriorities, htmlAttributes)  &nbsp; Priorities </label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="ckAttending">@Html.CheckBox("ckAttending", gridFilterModel.bSpkrMgAtt, htmlAttributes)  &nbsp; Attending</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="ckThumbnails">@Html.CheckBox("ckThumbnails", gridFilterModel.bSpkrMgTN, htmlAttributes) &nbsp; Thumbnail</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="ckTime">@Html.CheckBox("ckTime", gridFilterModel.bSpkrMgTime, htmlAttributes) &nbsp; Activity Times</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="ckFinalDisp">@Html.CheckBox("ckFinalDisp", gridFilterModel.ckFinalDisp, htmlAttributes) &nbsp; Final Disposition</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="chkAddedBy">@Html.CheckBox("chkAddedBy", gridFilterModel.chkAddedBy, htmlAttributes) &nbsp; Show Only Added by</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="chkshowOnlyNotes">@Html.CheckBox("chkshowOnlyNotes", gridFilterModel.chkHideNotes, htmlAttributes) &nbsp; Hide Notes</label>
                                    <label class="lblSmall me-2 align-items-center" for="chkComment" style="display:none;">@Html.CheckBox("chkComment", gridFilterModel.chkComment, htmlAttributes) &nbsp; Display Communication Comments</label>
                                    <label class="lblSmall me-2 align-items-center" for="chkShowNoteEFree" style="display:none;">@Html.CheckBox("chkShowNoteEFree", gridFilterModel.chkShowNoteEFree, htmlAttributes) &nbsp; Show notes event free</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="chkAnnouncementshow">@Html.CheckBox("chkAnnouncementshow", gridFilterModel.chkAnnouncementshow, htmlAttributes) &nbsp; Show Announcements</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="chkCallnotesEvent">@Html.CheckBox("chkCallnotesEvent", gridFilterModel.chkCallnotesEvent, htmlAttributes) &nbsp; Call notes for this event only</label>
                                    <label class="lblSmall d-flex me-2 align-items-center" for="chkSelectedPeople">@Html.CheckBox("chkSelectedPeople", gridFilterModel.chkSelectedPeople, htmlAttributes) &nbsp; Selected People</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row ps-2">
                        <div class="row align-items-center gx-2">
                            <div class="col-md-4 ">
                                <div class="d-flex flex-wrap">
                                    @{
                                        string strAlpha = "A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,#";
                                        foreach (string s in strAlpha.Split(','))
                                        {
                                            @Html.Raw("<a class='btn-Link AlphaLinks me-1' data-id='" + s + "'>" + s + "</a>")
                                        }
                                    }
                                </div>
                            </div>

                            <div class="col-md-3">
                                <label id="lblRowscount" style="font-family: sans-serif; font-size: 10pt">  Rows:0</label>
                            </div>

                            <div class="col-md-5">
                                <label id="lblSpeakerstates" style="font-family: sans-serif; font-size: 10pt">@ViewBag.SpeakerStats</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 mt-2">
                            @*<table id="grid"></table>*@
                            @(Html.Kendo().Grid<fcConferenceManager.Models.SpeakerGridView>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Select().Width(30);
                                    columns.Bound(c => c.PaddedID).HeaderTemplate("ID").ClientTemplate(@"<a href='\\#' class='Idclick' data-id='#:AccountPkey#' style=""color:\\#000;text-decoration:none;pointer-events:#:(EditLink == false)? '':'none' #;"">#:PaddedID#</a>").Width(50);
                                    columns.Bound(c => c.ContactName).Width(100).HeaderTemplate("Image")
                                    .ClientTemplate(@"<img name='imgUserPhoto' id='imgUserPhoto' class='Rounded Shadow mx-auto d-block' onerror='this.src =""/accountimages/no-person.jpg"";' src='/accountimages/#:AccountPkey#_img.jpg'style='width: 40px;'/></div>").Width(70);
                                    //columns.Bound(c => c.LastName).HeaderTemplate("I").ClientTemplate("<img  src='/Images/navigation/righttriangle.png' class='btncollapseGrid' height='16' style='vertical-align:top;'/> ").Width(15).Sortable(false);
                                    columns.Bound(c => c.LastName).HeaderTemplate("Name").ClientTemplate(
                                    @"<div >"
                                    +@"<span id='lblLast' title='#:TTip#' class='fw-bold Font11' onclick=""playSound('#:PronunicationURL#','#:TypeNamePhonetic#','lblLast');"" style=""text-decoration: #:((TypeNamePhonetic== 'L')? 'underline':'none') #;color:#:NameColors.LatForeColor#;"">#:LastName#</span><span id='lblFirst' title='#:PersonalBio#' class='fw-bold Font11 tooltip' style='cursor: pointer;color:#:NameColors.FirstForeColor#;'>, #:FirstName# </span> "
                                    +@"<span id='lblNickName' class='fw-bold Font11' onclick=""playSound('#:PronunicationURL#','#:TypeNamePhonetic#','lblNickName');"" style=""color:#:NameColors.NickNameForeColor#;"">#if (NickName !='') {#(<span style=""text-decoration: #:((TypeNamePhonetic == 'N')? 'underline':'none') #;"">#:NickName#</span>) #}#</span> <span id='lblPhoneticName'  onclick=""playSound('#:PronunicationURL#','#:TypeNamePhonetic#','lblPhoneticName');"" class='fw-bold  me-1' style=""color:#:NameColors.PhoneticNameForeColor#;"" >#if(PhoneticName !='' ) {#""<span style=""text-decoration: #:((TypeNamePhonetic== 'P')? 'underline':'none') #;"">#:PhoneticName.replaceAll('""','')#</span>"" #}#</span>"
                                    +"<span id='lblSalutation'  class='fw-bold  Font11 ' style='color:#:NameColors.SalutationForeColor#;'>#:Salutation# </span><span id='lblDegrees' class='lblSmall' > #:Degrees# </span><span id='lblTitle' title='#:PersonalBio#' class='lblSmall' style='cursor: pointer'> #:Title# </span> "
                                    +"<span id='lblDepartment' style='cursor: pointer' class='lblSmall' title='Department'> #:Department# </span>"
                                    +@"<a href='Javascript:void(0);' title="" #:OrganizationTypeID# # if(OrganizationTypeID != '' && AboutMe != ''){# ' | ' # } else {# '' # }# #:AboutMe# ""  style=""display:#:((OrgURL.length >0)? '': 'none')#;"" onclick='return VerifyURL(""#:OrgURL#"",""#:AccountPkey#"")'><span id='lblOrg' style='display: none;cursor: pointer' class='lblSmall' title='Department'> #:OrganizationID# </span></a>"
                                    +@"<span id='lblOrg' class='lblSmall' title='Department' style=""display: display:#:((OrgURL.length >0)? 'none':'')#;""> #:OrganizationID# </span>"
                                    +"</div>"
                                    +"<ul class='d-flex p-0 list-inline lblSmall align-items-center'><li class='me-1'><li class='me-1 d-flex align-items-center'>"
                                    +@"<a href='Javascript:void(0);'><img src='/Images/Icons/skypCall1.png'  onclick='return UpdateCall(""#:PhoneCall_1#"",""#:AccountPkey#"",""Phone Call"");' title='Skype Call' alt='Skype Call' style=""display:#:((PhoneCall_1.length <=0)? 'none':'')#;""></a>"
                                    +@"<a  class='me-1' style='font-family: sans-serif; font-size: 8pt; color:\\#333; text-decoration:none;' data-rel='external' title='#:PhoneCall1#'  onclick='return UpdateCall(""#:PhoneCall_1#"",""#:AccountPkey#"",""Phone Call"");'> #:PhoneCall1#</a>"
                                    +"</li>"
                                    +"<li class='me-1 d-flex align-items-center'>"
                                    +@"<a href='Javascript:void(0);'><img src='/Images/Icons/skypCall1.png'  onclick='return UpdateCall(""#:PhoneCall_2#"",""#:AccountPkey#"",""Phone Call"");' title='Skype Call' alt='Skype Call' style=""display:#:((PhoneCall_2.length <=0)? 'none':'')#;""></a>"
                                    +@"<a  class='me-1' style='font-family: sans-serif; font-size: 8pt; color:\\#333; text-decoration:none;' data-rel='external' title='#:PhoneCall2#'  onclick='return UpdateCall(""#:PhoneCall_2#"",""#:AccountPkey#"",""Phone Call"");'> #:PhoneCall2#</a>"
                                    +"</li>"
                                    +"<li class='me-1 d-flex align-items-center'>"
                                    +@"<a href='Javascript:void(0);' onclick='return UpdateCall(""#:SkypeAddress#"",""#:AccountPkey#"",""Email Call"")' style='color:\\#000'><img src='/Images/Icons/skype.png' title='Skype Call History' style=""margin-left: 5px;display:#:(SkypeAddress == '')? 'none':'' #;""/>"
                                    +"<label id='lblPhones' class='fa fa-phone ms-1 me-1' style='display:none;'>#:Phone#</label><label class='lblSmall' id='Label17'>#:EmailAddress#</label>"
                                    +"<label id='lblTimeTooltips' class='lblSmall ms-1 me-1' title='#:TimeTooltips#' style='cursor: pointer;font-style:italic'>#:TimeZone#</label><label id='lblSpkrFlag' class='lblSmall' style='display:none;'>#:SpkrFlag#</label>"
                                    +"<label class='lblSmall ms-1 me-1' style='display:#:(ExpressionDate == '' ? 'none':'')#;'>#:ExpressionDate#</label>"
                                    +"</a></li></ul>"
                                    +"<ul class='d-flex p-0 list-inline align-items-center'>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' id='ImageButton1' onclick='return SkypeCallHistory(""#:AccountPkey#"",""#:FirstName#"",""#:LastName#"");' title='Skype Call History'> <img src='/images/icons/clock.png' width='16' alt='Alternate Text' /></a></li>"
                                    +"<li class='me-1'><a href='Javascript:void(0);' class='evtImgExpress imgExpress' data-name='#:PendingAcName#' data-pspk='#:PrioritySpkr#' data-id='#:AccountPkey#' data-eaid='#:EventAccount_pKey#' title='Events'><img src='/images/icons/expression2.png' width='16' alt='Events' title='Events' /></a></li>"
                                    +"<li class='me-1'style='display:none;'><a href='Javascript:void(0);' class='evtimgEdit' title='Notes' ><img src='/images/icons/pencil.gif' width='16' alt='Notes'/></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' data-name='#:PendingAcName#' data-id='#:AccountPkey#' data-eaid='#:EventAccount_pKey#' class='lnkNoteHistory' data-id='#:EventAccount_pKey#' title='Note'><img src='/images/icons/Pencil.png' title='Note' /></a></li>"
                                    +"<li class='me-1'><a href='Javascript:void(0);'  data-name='#:PendingAcName#' data-id='#:AccountPkey#' data-eaid='#:EventAccount_pKey#' class='imgAddInt' title='Activities'><img src='/images/icons/add2.png' width='12' alt='Activities' /></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' title='Featured Speaker' data-id='#:AccountPkey#' data-spk='#:PrioritySpkr#' class='btnflag cmdFeatured'><img src=""/images/icons/#:((PrioritySpkr == 'False')? 'FSgray.png' : 'FSgreen.png')#"" width='11' alt='Featured Speaker' /></a></li>"
                                    +"<li class='me-1'><a href='Javascript:void(0);' data-name='#:PendingAcName#' data-id='#:AccountPkey#' class ='imgHistory cmdHistory' title='Account History'><img src='/images/icons/history2.png' width='16' alt='Alternate Text' /></a></li>"
                                    +"<li class='me-1'><a href='Javascript:void(0);' id='lnkProfileBio' class='lnkProfileBio'></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' data-name='#:PendingAcName#' data-id='#:AccountPkey#' class='cmdFlagHistory' title='#:FlagTooltips#'><img src='#:IsShowPreFlag#' ToolTip='#:FlagTooltips#' /></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' class='imgFeed cmdView' data-id='#:AccountPkey#' data-rating='#:SpkrRatingAvailable#' data-feed='#:HasPosted#' title='Feedback'><img src='/images/icons/feedback.png' ToolTip='#:FlagTooltips#' /></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' class='lnkProfileBio' data-id='#:AccountPkey#' data-last='#:LastName#' data-first='#:FirstName#' title='Bio'><img src='#:BIOINFO#' ToolTip='BIO' /></a></li>"
                                    +@"<li class='me-1'><a href='#:LinkedInProfile#' target='_blank' title='#:ShowLinkedInProfile#' style='font-size: 8pt'><img src='/Images/Icons/Lin.png' style=""display:#:(ShowLinkedInProfile.length <= 0? '':'')#;"" /></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' class='imgPriority' title='Priorities'><img src='#:SessionPriorities_Color#' /></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' class='cmdProducerReport' data-acid='#:AccountPkey#'  data-name='#:PendingAcName#' data-id='#:ProducerReport#' title='#:Problem#'><img src='#:PImage#' ToolTip='#:Problem#' /></a></li>"
                                    +@"<li class='me-1' style=""display:#:(PotentialSpeaker == '0'? 'none':'')#;""><a href='Javascript:void(0);' class='imgnei' title='Possible Speaker'></a></li>"
                                    +@"<li class='me-1'><a href='Javascript:void(0);' class='cmdFollowupRight lnlFollowupRights fw-bold' title='MAGI Contact' onclick='return FollowupRightsOpen(""#:Followupright_Pkey#"",""#:PendingAcName#"",""#:AccountPkey#"");' style=""text-decoration:none;color:black;width:#:(Followupright_Pkey == '0'? '':'24')#;background-color:#:(Followupright_Pkey == '0'? 'White':FBackColor)#;"">#:FollowUpRights#</a></li>"
                                    +@"<li class='me-1'><label id='lblFlag' class='lblSmall isEmpty ms-1 me-1'>#:ShowSpeakerFlag#</label></li>"
                                    +@"<li class='me-1' style=""display:#:(AFShow == '0'? 'none':'')#;""><a href='Javascript:void(0);' ><img src='#:AFBackColor#' alt='Alternate Text' title='additional follow' /> </a></li>"
                                    +"</ul>").Width(555);
                                    columns.Bound(c => c.lastUpdatedP_S).HeaderTemplate("Updated").ClientTemplate(@"#=PSUpdate#").Width(80);
                                    columns.Bound(c => c.FinalDisp).HeaderTemplate("Final").ClientTemplate(@"<a href='Javascript:void(0);' class='cmdFinalDisp' style='text-decoration:none; cusror:pointer; color:black;'>#:FinalDisp#</a>").Width(180);
                                    columns.Bound(c => c.NumContacts).HeaderTemplate("#Con").ClientTemplate(@"<a title='#:Con_ToolTips#' data-id='#:AccountPkey#' data-eaID='#:pKey#' class='cmdContactbtn' style='text-decoration:none;cursor: pointer;color:black;font-size: 10pt;' >#:NumContacts#</a>").Sortable(false).Width(50);
                                    columns.Bound(c => c.SpkrNextContactShort).HeaderTemplate("Followup").ClientTemplate(@"<label class='Font10' id='lblContactDate' title='#:FollowNotesToolTip#' style='cursor: pointer;'>#=SpkrNextContact#</label>").Width(80);
                                    columns.Bound(c => c.All_Notes_Short).HeaderTemplate("Call Notes").ClientTemplate(@"<label class='OnlyNotes' style=""display:#:(chkHideNotes == false)? 'none':''#;"">#=OnlyNotes#</label><labe class='All_Notes' style=""display:#:(chkHideNotes == false)? '':'none'#;"">#=All_Notes#</label><br />"
                                    + @"<a id='A11' style=""color: \\#2a8cd2; text-decoration: none; font-size: 8pt;display:#:((NextFiveNotes.length >0)? '':'none')#;"" href='javascript:void(0);' onclick='Fn__NotesshowMore(this,0)'>more...</a>"
                                    + "<span id='sp21' style='display: none'>#=NextFiveNotes#<br /><a id='A21' style='color: ##2a8cd2; text-decoration: none; font-size: 8pt;' href='Javascript:void(0);' onclick='Fn__NotesshowMore(this,1)'>less...</a></span>"
                                    ).Width(380);
                                    columns.Bound(c=>c.SpkrRating).HeaderTemplate("Rating").ClientTemplate(@"<span id='sp1' class='textWrap'>#=SpkrRating#<br /><a id='A1'style=""color: blue; text-decoration: none; font-size: 8pt;display:#:((SpkrRating.length ==SpkrRating1.length)? 'none' :'initial') #;"" href='javascript:void(0);' onclick='Fn_showMore(this,0)' >more...</a></span>"
                                    + "<span id='sp2' class='textWrap' style='display: none'>#=SpkrRating1#<br /><a id='A2' style='color:blue; text-decoration:none; font-size:8pt;' href='javascript:void(0);' onclick='Fn_showMore(this, 1)'>less...</a></span>"
                                    ).Width(140);
                                    columns.Bound(c => c.LastName).HeaderTemplate("<span title='Speaker Rating ,Account Status,Speaker Status'>Status</span>")
                                    .ClientTemplate(@"<table border='0' style='border-style: dotted; text-align: left'> "
                                    + "<tr><td id='trRatingInfo'  style='text-align: right' class='isEmpty'><label id='lblSpkrRating' class='lblSmall lblSpkrRating' title='Speaker Rating' >#:strRIcon#</label>"
                                    + @"<img src='/images/icons/gold_star1.png' class='imgStar' title='Rated EXCELLENT' title='Speaker Rating'  style=""display:#:((imgStarVisible == false) ? 'none':'' )#;"" />"
                                    + @"<img src='/images/icons/RedX.png' class='imgRedstar' title='Rated Good' title='Rated Good' width ='11px' style=""display:#:((RedStarVisible == false) ? 'none':'' )#;"" /> </td>"
                                    + "<td id='trAccountStatus'  style='text-align: left;width:15px;'><label class='lblAccStatus imgLabel fw-bold' title='Account Status' style='height:20px;width:15px;font-size: 14px;color:#:AccStatusForeColor#;background-color:#:AccStatusBackColor#;display:#:((AccStatusVisible == false) ? 'none':'' )#;'>#:AccStatusText#</label></td>"
                                    + "<td id='trSpeakerStatus' style='text-align: left;width:15px;'><label class='lblSpeakerStatus imgLabel fw-bold' title='Speaker Status' style='height:20px;width:15px;font-size: 14px;color:#:SpkrStatusForeColor#;background-color:#:SpkrStatusBackColor#;display:#:((SpeakerStatusVisible == false) ? 'none':'' )#;'>#:SpkrStatusText#</label></td></tr></table>"
                                    ).Width(80).Sortable(false);
                                })
                                .ClientDetailTemplateId("InterestTemplate")
                                .Events(events => events.DetailExpand("onDetailExpand").DetailCollapse("OnDetailCollapse"))
                                .NoRecords("No results found")
                                .HtmlAttributes(new { style = "height: 550px;" })
                                .Scrollable()
                                .Sortable()
                                .PersistSelection(true)
                                .Pageable(pageable => pageable.ButtonCount(5).Input(false).Numeric(true).Info(false).PreviousNext(true).Refresh(false).PageSizes(false))
                                .Events(events => events.Page("onPaging")
                                .Change("onChange")
                                .DataBinding("onDataBinding")
                                .DataBound("onDataBound")
                                //.Sort("onSorting")
                                //.Filter("onFiltering")
                                //.Group("onGrouping")
                                //.GroupCollapse("onGroupCollapse")
                                //.GroupExpand("onGroupExpand")
                                )
                                .DataSource(dataSource => dataSource
                                .Custom()
                                .Batch(true)
                                .PageSize(50)
                                .Sort(p =>
                                {
                                    if (string.IsNullOrEmpty(ViewBag.strSpkrMgSortExpression))
                                    {
                                        p.Add("LastName").Ascending();
                                        p.Add("FirstName").Ascending();
                                    }
                                    else
                                    {
                                        foreach (string s in ViewBag.strSpkrMgSortExpression.Split(","))
                                        {
                                            if (ViewBag.SpkrMgSortOrder == "0")
                                                p.Add(s).Ascending();
                                            else
                                                p.Add(s).Descending();
                                        }
                                    }
                                })
                                .Schema(schema => schema.Model(m => m.Id(p => p.PaddedID)))
                                .Transport(new
                                {
                                    //the ClientHandlerDescriptor is a special type that allows code rendering as-is (not as a string)
                                    read = new Kendo.Mvc.ClientHandlerDescriptor() { HandlerName = "customRead" }
                                })))
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="" style="display:none;">
        @if (gridFilterModel != null)
        {
            <input type="hidden" id="F_ddDateRange" value="@gridFilterModel.ddDateRange" />
            <input type="hidden" id="F_ddTimezone" value="@gridFilterModel.ddTimezone" />
            <input type="hidden" id="F_intDemiSpkrMgID" value="@gridFilterModel.intDemiSpkrMgID" />
            <input type="hidden" id="F_intOrgType" value="@gridFilterModel.ddOrgType" />
            <input type="hidden" id="F_intStatus" value="@gridFilterModel.ddStatus" />
            <input type="hidden" id="F_intDateType" value="@gridFilterModel.ddDateType" />
            <input type="hidden" id="F_intCountry" value="@gridFilterModel.ddCountry" />
            <input type="hidden" id="F_intSpkrFlag" value="@gridFilterModel.ddSpkrFlag" />
            <input type="hidden" id="F_intFinalDispVal" value="@gridFilterModel.ddFinalDispVal" />
            <input type="hidden" id="F_intSesStatus" value="@gridFilterModel.ddSesStatus" />
            <input type="hidden" id="F_intlInterested" value="@gridFilterModel.ddlInterested" />
            <input type="hidden" id="F_rbTop" value="@gridFilterModel.rbTop" />
            <input type="hidden" id="F_bAcctSpecialArrangement" value="@gridFilterModel.bAcctSpecialArrangement" />
            <input type="hidden" id="F_bSpkrMgFD" value="@gridFilterModel.bSpkrMgFD" />
            <input type="hidden" id="F_bNoEvents" value="@gridFilterModel.bNoEvents" />
            <input type="hidden" id="F_intSpkrCurEventPKey" value="@gridFilterModel.intSpkrCurEventPKey" />
            <input type="hidden" id="F_intResult" value="@gridFilterModel.ddResult" />
            <input type="hidden" id="F_intTrack" value="@gridFilterModel.ddTrack" />
            <input type="hidden" id="F_intContacted" value="@gridFilterModel.ddContacted" />
            <input type="hidden" id="F_intAccStatus" value="@gridFilterModel.ddAccStatus" />
            <input type="hidden" id="F_intRating" value="@gridFilterModel.ddRating" />
            <input type="hidden" id="F_intSpeakerStatus" value="@gridFilterModel.ddSpeakerStatus" />
            <input type="hidden" id="F_intPastActivity" value="@gridFilterModel.ddPastActivity" />
            <input type="hidden" id="F_SelchkStrSpkr" value="@gridFilterModel.SelchkStrSpkr" />
            <input type="hidden" id="F_cbddlInterested" value="@gridFilterModel.cbddlInterested" />
            <input type="hidden" id="F_strddlNotiner" value="@gridFilterModel.strddlNotiner" />
            <input type="hidden" id="F_strPriorspeaker" value="@gridFilterModel.strPriorspeaker" />
            <input type="hidden" id="F_strParticipation" value="@gridFilterModel.strParticipation" />
            <input type="hidden" id="F_strInterestedEvent" value="@gridFilterModel.strInterestedEvent" />
            <input type="hidden" id="F_strName" value="@gridFilterModel.strName" />
            <input type="hidden" id="F_dtPStart" value="@gridFilterModel.sdtPStart" />
            <input type="hidden" id="F_dtPEnd" value="@gridFilterModel.sdtPEnd" />
            <input type="hidden" id="F_dtStart" value="@gridFilterModel.sdtStart" />
            <input type="hidden" id="F_dtEnd" value="@gridFilterModel.sdtEnd" />
            <input type="hidden" id="F_strevents" value="@gridFilterModel.strevents" />
            <input type="hidden" id="F_strSpeakerFlag" value="@gridFilterModel.strSpeakerFlag" />
            <input type="hidden" id="F_strAnnouncement" value="@gridFilterModel.strAnnouncement" />
            <input type="hidden" id="F_strSpeakerStatus" value="@gridFilterModel.strSpeakerStatus" />
            <input type="hidden" id="F_strDemiSpkrMgID" value="@gridFilterModel.strDemiSpkrMgID" />
            <input type="hidden" id="F_strID" value="@gridFilterModel.strID" />
            <input type="hidden" id="F_strOrg" value="@gridFilterModel.strOrg" />
            <input type="hidden" id="F_strnotes" value="@gridFilterModel.strnotes" />
            <input type="hidden" id="F_strPriorspeaker" value="@gridFilterModel.strPriorspeaker" />
            <input type="hidden" id="F_strddlNotiner" value="@gridFilterModel.strddlNotiner" />
            <input type="hidden" id="F_strParticipation" value="@gridFilterModel.strParticipation" />
            <input type="hidden" id="F_streventInterested" value="@gridFilterModel.streventInterested" />
            <input type="hidden" id="F_strevents" value="@gridFilterModel.strevents" />
            <input type="hidden" id="F_strFollowupRight2" value="@gridFilterModel.strFollowupRight2" />
            <input type="hidden" id="F_otherDate" value="@ViewBag.OtherDate" />
            <input type="hidden" id="EvSessionCancel" value="@ViewBag.STATUS_Cancelled" />
            <input type="hidden" id="StatusHypo" value="@ViewBag.STATUS_Hypothetical" />
        }
        <input type="hidden" id="SpeakerFilterData" value="@Json.Encode(gridFilterModel)" />
        <input type="hidden" id="TotalRows" value="" />
        <input type="hidden" id="CountRows" value="" />

    </div>
</div>
<script id="InterestTemplate" type="text/kendo-tmpl">
    <div style="position: relative; padding:10px;">
        <div class="col-md-12 p-1">
           <label class="lblSmall me-2 align-items-center ckWritingArticle" for="ckWritingArticle_#:AccountPkey#" title='I am also interested in writing an article for the Journal of Clinical Research Best Practices'> <input id="ckWritingArticle_#:AccountPkey#" class='ckWritingArticle' title="I am also interested in writing an article for the Journal of Clinical Research Best Practices" type="checkbox"  value="" /> &nbsp; Will author article</label>
        </div>
        <div class="col-md-12 p-1">
            <label class='Font10 fw-bold'>Attended:</label> <label class='lblAttended' class='lblSmall'>#:Attended#</label>
        </div>
        <div class="col-md-12 p-1">
            <label class='Font10 fw-bold'>Proposals:</label>  <label id='lblAttended' class='lblSmall'>#=Proposal#</label>
        </div>
        <div class="col-md-12 p-1 d-flex">
        <label class='Font10 fw-bold' style="width:60px;"></label>
            <input type="hidden" class='hdfaccountPkey' value ='#:AccountPkey#' />
            <input type="hidden" class='hdfContactName' value ='#:ContactName#' />
            <button type="button" data-name="#:PendingAccountName#" data-spf= "#:SpkrFlag#"  data-id="#:AccountPkey#" data-eaID="#:pKey#" class="btnFlagAssigned btnSmall btnNarrow">Flag</button>
            <button type="button" data-id="#:AccountPkey#" data-spf= "#:SpkrFlag#" data-eaID="#:pKey#" class="cmdContactbtn btnSmall btnNarrow  ms-1 me-1">Contact</button>
            <button type="button" data-name="#:PendingAccountName#" data-id="#:AccountPkey#" id="cmdReview_#:AccountPkey#" class="cmdReview btnSmall btnNarrow  ms-1 me-1">Mark as Reviewed</button>
            <button type="button" data-name="#:PendingAccountName#" data-id="#:AccountPkey#"  id="cmdReset_#:AccountPkey#" class="cmdReset btnSmall btnNarrow  ms-1 me-1">Reset to Interested</button>
            <select id="ddSpeakerStatusUpdate_#:AccountPkey#" data-name="#:ContactName#"  data-id="#:AccountPkey#" data-eaID="#:pKey#" class="Font9 ms-1 me-1 ddSpeakerStatusUpdate"></select>
        </div>
        <div class="col-md-12 p-1" id="ddSessions_#:AccountPkey#">
        </div>
    </div>
</script>
<div id="loadTemp">

</div>
<div class="modal fade" id="RdFlag2" tabindex="-1" aria-labelledby="RdFlagComments" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdFlagComments" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <h5 class="modal-title" id="lblFlagCommentTitle2"></h5>
                <div>
                    <button id="btnSaveFlag2" type="button" class="btn">Save</button>
                    <button id="btnflag2" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" value="" id="Flag2Data" />
                <div class="row p-2">
                    <div class="col-xs-12">
                        <label class="Font10" id="Label26">Flag:</label>
                        @(Html.Kendo().DropDownList().Name("dFlag2").DataTextField("strText").DataValueField("pKey").Height(400)
                                                  .DataSource(source =>
                                                     source.Custom()
                                                     .Group(group => group.Add("groupId", typeof(string)))
                                                     .Transport(transport => transport
                                                     .Read(read => {
                                                         read.Url("/Operations/GetSpeakerFlagGrouped").DataType("json").Type(HttpVerbs.Get);
                                                     })).ServerFiltering(false)
                                                   ).Value("").HtmlAttributes(new { style = "width: 100%;min-width:200px;" }))
                    </div>
                    <div class="col-xs-12">
                        <label class="Label69" id="Label26">Comments:</label>
                        @(Html.Kendo().TextArea().Name("txtFlagComments2").Rows(6).MaxLength(500).Enable(true).HtmlAttributes(new { style = "font-size:10pt;height:140px;background-color: white; color: black;" }))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwCommentHistory" tabindex="-1" aria-labelledby="RdFlagComments" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdFlagComments" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <h5 class="modal-title" id="lblCStatusTitle"></h5>
                <div>
                    <button id="cmdCStatusCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" value="" id="AccountSessionPKey" />
                <input type="hidden" value="" id="PendingAccountPKey" />
                <input type="hidden" value="" id="SelectedCommentKeys" />
                <div class="col-md-12">
                    <img id="cmdSpkDelCom" height="16" src="/images/icons/minus.png" title="Delete" style="cursor:pointer;" />
                    <br />
                    @(Html.Kendo().Grid<fcConferenceManager.Models.CommentsHistory>().Name("gridComments").Scrollable().PersistSelection(true)
                    .NoRecords("No results found").Sortable().HtmlAttributes(new { style = "height: 300px;" })
                    .Columns(columns => {
                     columns.Select().Width(30);
                     columns.Bound(c => c.Comments).HeaderTemplate("Note").ClientTemplate(@"<label> #:Comments# </label><label class='lblSmall'> #:AssignmentStatusID# </label>").Sortable(false).Width(50);
                    })
                    .Selectable(s => s.Mode(GridSelectionMode.Multiple))
                    .DataSource(dataSource => dataSource.Server().Model(model => model.Id(p => p.pKey)))
                    .Events(events => events.Change("onChangeGrid"))
                    )
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwStatus" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdFlagComments" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblStatusTitle"></h5>
                    <label class="lblSmall" id="lblStatusName"></label>
                </div>
                <div>
                    <button id="cmdStatusSave" type="button" class="btn">Proceed</button>
                    @* OnClientClick="change()" *@
                    <button id="cmdStatusSaveWithoutEmailSave" type="button" class="btn">Finish without Invitation</button>
                    @* OnClientClick="change()" *@
                    <button id="cmdStatusCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-1">
                    <span id="checkIsSlide"><input type="checkbox" id="chkIsSlide" value="" /> Create slides</span>
                    <span id="checkOfferLeader"><input type="checkbox" id="chkOfferLeader" value="" title="Assign leader role" /> Assign as leader</span>
                    <span id="checkOfferMod"><input type="checkbox" id="chkOfferMod" value="" title="Assign moderator role" /> Assign as moderator</span>
                    <span id="checkIsLeader"><input type="checkbox" id="chkIsLeader" value="" title="Assign as leader" /> Assign as leader</span>
                    <span id="checkIsModu"><input type="checkbox" id="chkIsModu" value="" title="Assign as moderator" /> Assign as moderator</span>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label id="" class="lblSmall">New Status:</label><br />
                        @{
                            List<SelectListItem> ddEditStatus = new List<SelectListItem>() { new SelectListItem() { Text="Select", Value="0" } };
                            if (ViewBag.ddEditStatus != null)
                            {
                                ddEditStatus.AddRange((List<SelectListItem>)ViewBag.ddEditStatus);
                            }
                        }
                        @(Html.Kendo().DropDownList()
                                  .Name("ddEditStatus").DataTextField("Text")
                                  .DataValueField("Value")
                                  .BindTo(ddEditStatus)
                                  .Events(e=>e.Change("onEditStatusChange"))
                                  .Value("0").HtmlAttributes(new { style = "width: 100%;min-width:210px;" }))
                    </div>
                    <div class="col-md-6" id="tdDueDate">
                        <label id="" class="lblSmall">Due Date for Slides:</label><br />
                        @(Html.Kendo().TextArea().Name("txtDueDate").MaxLength(20).HtmlAttributes(new { style = "width: 100px;" }))
                        @(Html.Kendo().DatePicker()
                        .Name("dpSlideduedate")
                        .Format("")
                        .Format("{0:dd/MM/yyyy}")
                        .Value("10/10/2011")
                        .DateInput()
                        .HtmlAttributes(new { style = "width: 100%;min-width:90px;", title = "datepicker" }))
                    </div>
                </div>
                <div class="row" id="trrddatetimepicker">
                    <div class="col-md-7">
                        <label id="" class="lblSmall">Next follow up date:</label><br />
                    </div>
                    <div class="col-md-5 p-0">
                        <label id="lblMagiContact" class="lblSmall">Speaker Contact:</label><br />
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                            @(Html.Kendo().RadioButton().Name("radioNextFollowDate").Checked(true).HtmlAttributes(new { @name = "A" }))
                        </div>
                        <div class="col-md-3">
                            @(Html.Kendo().DatePicker()
                        .Name("txtrddatetimepicker")
                        .Format("")
                        .Format("{0:MM/dd/yy}")
                        .Value("10/10/2011")
                        .DateInput()
                        .HtmlAttributes(new { style = "width: 100%;min-width:90px;", title = "datepicker" }))
                        </div>
                        <div class="col-md-3">
                            @(Html.Kendo().TimePicker().Name("dpTimeStatus").Value("").Interval(15).HtmlAttributes(new { style = "width: 100%", title = "timepicker" }).DateInput())
                        </div>
                        <div style="display: none">
                            <label id="lblSNCD" class="lblSmall">Keep follow up date:</label><br />
                            @*<asp:RadioButton ID="lblNextConDate" runat="server" GroupName="A" CssClass="font10" />*@
                        </div>
                        <div class="col-md-3">
                            @{
                                List<SelectListItem> ddSpeakerContact = new List<SelectListItem>() { new SelectListItem() { Text="Select", Value="0" } };
                                if (ViewBag.ddSpeakerContact != null)
                                {
                                    ddSpeakerContact.AddRange((List<SelectListItem>)ViewBag.ddSpeakerContact);
                                }
                            }
                            @(Html.Kendo().DropDownList()
                                  .Name("ddSpeakerContact").DataTextField("Text")
                                  .DataValueField("Value")
                                  .BindTo(ddSpeakerContact)
                                  .Value("0").HtmlAttributes(new { style = "width: 100%;min-width:210px;" }))
                        </div>
                        @(Html.Kendo().CheckBox().Name("chkMagiContact").HtmlAttributes(new { style = "display:none;" }))
                    </div>
                </div>
                <div class="col-md-12">
                    <label id="" class="lblSmall">Comments:</label><br />
                    @(Html.Kendo().TextArea().Name("txtStatusComment")
                    .Placeholder("Enter your text here.")
                    .Rows(5)
                    .MaxLength(400)
                    .HtmlAttributes(new { style = "width: 100%;font-size:11pt;" }))
                </div>
                <div class="col-md-12">
                    <label id="lblstatusComment" class="lblSmall"></label>
                </div>
                <div class="col-md-12">
                    <label class="lblSmall">Take Home Lesson:</label>
                    @(Html.Kendo().TextArea().Name("txttakehomeLession")
                    .Placeholder("Enter your text here.")
                    .Rows(5)
                    .MaxLength(300)
                    .HtmlAttributes(new { style = "width: 100%;font-size:11pt;" }))
                </div>
                <div id="phIsAssigned">
                    <label id="lblStatusA"></label>
                </div>
                <input type="hidden" value="@ViewBag.intMAGIContactPKey" id="intMAGIContactPKey" />
            </div>
        </div>
    </div>
    <input type="hidden" id="hdfSAccountID" value="" />
    <input type="hidden" id="hdfSAccountSession" value="" />
    <input type="hidden" id="hdfSHaveSlides" value="" />
    <input type="hidden" id="hdfSSessionID" value="" />
    <input type="hidden" id="hdfAccoutStatusID" value="" />
    <input type="hidden" id="hdfAccoutNameVal" value="" />
    <input type="hidden" id="hdfValESPK" value="" />
    <input type="hidden" id="hdfSID" value="" />
    <input type="hidden" id="hdfEventAcc" value="" />
    <input type="hidden" id="hdfHaveSlide" value="" />

    @*<table style="width: 100%">
            <tr>
                <td style="padding-top: 5px" colspan="2">

                    <table>
                        <tr id="trrddatetimepicker" runat="server">
                            <td colspan="5">
                                <table>
                                    <tr>
                                        <td>
                                            <asp:Label ID="Label53" runat="server" Text=" Next follow up date:" CssClass="lblSmall" /><br />
                                            <asp:RadioButton ID="radioNextFollowDate" runat="server" Checked="true" GroupName="A" />
                                            <telerik:RadDatePicker runat="server" ID="txtrddatetimepicker" Skin="Metro" Width="120px" DateInput-DateFormat="MM/dd/yy" />
                                            <telerik:RadDatePicker runat="server" ID="rddatetimepicker" Width="24px" Style="display: none;" Skin="Metro" AutoPostBack="true" OnSelectedDateChanged="rddatetimepicker_SelectedDateChanged">
                                                <DateInput runat="server" Style="display: none;"></DateInput>
                                            </telerik:RadDatePicker>
                                            <telerik:RadTimePicker runat="server" ID="dpTime" Skin="Metro" AutoPostBack="true" Width="120px" />
                                        </td>
                                        <td style="display: none">
                                            <asp:Label ID="lblSNCD" runat="server" Text="Keep follow up date:" CssClass="lblSmall" /><br />
                                            <asp:RadioButton ID="lblNextConDate" runat="server" GroupName="A" CssClass="font10" />
                                        </td>
                                        <td style="padding-left: 10px">
                                            <asp:Label ID="lblMagiContact" runat="server" Text="Speaker Contact:" CssClass="lblSmall" /><br />
                                            <telerik:RadDropDownList ID="ddSpeakerContact" runat="server" Width="160px" Skin="Metro" DropDownWidth="160px" />
                                            &nbsp;
                                            <asp:CheckBox ID="chkMagiContact" runat="server" Style="display: none" />
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>*@
</div>
<div class="modal fade" id="rwCancel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblCancelTitle">Speaker Cancellation</h5>
                </div>
                <div>
                    <button id="cmdYes" type="button" class="btn">Proceed with Invitation</button>
                    <button id="cmdFinish" type="button" class="btn">Save</button>
                    <button id="cmdNo" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                    @*  OnClientClick="return cmd_No()"  *@
                </div>
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-2">
                    <span id="checkRemoveEvent" style="display:none;"><input type="checkbox" id="chkRemoveEvent" value="" /> Cancel Attendance</span>
                    <div style="display:none;"><span id="checkRemoveSlide" style="display:none;"><input type="checkbox" id="chkRemoveSlide" value="" title="Remove Slides" /> Remove Slides</span></div>
                    <span id="checkCharge" style="display:none;"><input type="checkbox" id="chkCharge" value="" title="Charge for registration?" /> Charge for registration?</span>
                    <label id="lblSpeakerPaid" style="color: red;">Speaker has made a payment. Check the Ledger.</label>
                    <span id="checkCancelRef" style="display:none;"><input type="checkbox" id="chkCancelRef" value="" title="Assign as leader" /> Cancel Registration?</span>
                    <input type="hidden" id="hdfIsAllowCancel" value="" />
                    <input type="hidden" id="hdfCount" value="" />
                </div>
                <div class="col-md-12 pt-2" id="dlOtherSpot">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwSkypeHistory" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblCancelTitle">Skype Call History</h5>
                </div>
                <div>
                    <button id="Button5" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                    @*  OnClientClick="return cmd_No()"  *@
                </div>
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-1">
                    @(Html.Kendo().Grid<fcConferenceManager.Models.SkypeHistory>().Name("dgskype")
                    .Scrollable()
                    .NoRecords("No results found").Sortable().HtmlAttributes(new { style = "height: 300px;" })
                    .Columns(columns => {
                        columns.Bound(c => c.Account_pkey).HeaderTemplate("ID").Width(50);
                        columns.Bound(c => c.ContactName).HeaderTemplate("Name").Width(60);
                        columns.Bound(c => c.CallDateTime).HeaderTemplate("Call Time").Width(80);
                        columns.Bound(c => c.AddedbyName).HeaderTemplate("Called by").Width(60);
                    }))
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwHistory" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblrwHistory">History</h5>
                </div>
                <div>
                    <span class="lblSmall"><input type="checkbox" id="chkFlaghistory" /> Show flag history</span>
                    <button id="cmdHistoryClose" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-1">
                    <input type="hidden" id="hdfAcID" value="" />
                    @(Html.Kendo().Grid<fcConferenceManager.Models.SpeakerLogHistory>().Name("dgHistory")
                    .Scrollable()
                    .NoRecords("No results found").Sortable().HtmlAttributes(new { style = "height: 400px;" })
                    .Columns(columns => {
                        columns.Bound(c => c.UpdatedOn).HeaderTemplate("Date").Width(100);
                        columns.Bound(c => c.Change).HeaderTemplate("Change").ClientTemplate(@"#=Change#").Width(200);
                        columns.Bound(c => c.UpdatedBy).HeaderTemplate("Updated By").Width(100);
                    }))
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwFlag" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblrwFlagHistory">Flag History</h5>
                </div>
                @*<div>
                        <button id="cmdFlagHistoryClose" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                    </div>*@
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-1">
                    <input type="hidden" id="hdfAcID" value="" />
                    @(Html.Kendo().Grid<fcConferenceManager.Models.SpeakerFlagHistory>().Name("rdFlag")
                    .Scrollable()
                    .NoRecords("No results found").Sortable().HtmlAttributes(new { style = "height: 300px;" })
                    .Columns(columns => {
                        columns.Bound(c => c.EventID).HeaderTemplate("Event").Width(150);
                        columns.Bound(c => c.SpkrFlagID).HeaderTemplate("Flag").Width(100);
                        columns.Bound(c => c.Comments).HeaderTemplate("Comments").Width(200);
                    }))
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwProducerReport" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="Label48">Problems</h5>
                </div>
                <div>
                    <button id="cmdPrReport" type="button" class="btn">Save</button>
                    <button id="cmdPrCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Cancel">Cancel</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" id="hdfPAcc" value="" />
                <div class="col-md-12 pt-1">
                    <label id="lblProducerReport" style="display:none;"></label>
                    Name:
                    <label id="lblPRAccount" class="fw-bold"></label><br />
                    @{
                        List<SelectListItem> chkListItems = new List<SelectListItem>();

                        if (ViewBag.CheckBoxListProblems != null)
                        {
                            chkListItems =  (List<SelectListItem>)ViewBag.CheckBoxListProblems;
                        }
                    }
                    @( Html.Kendo().CheckBoxGroup().Name("ckProducerReview").Layout("vertiacal").Items(i => {
                            foreach (SelectListItem item in chkListItems)
                            {
                                i.Add().Label(item.Text).Value(item.Value);
                            }
                    }))
                    @*<telerik:RadComboBox ID="RadProducerReview" runat="server" Visible="false" Width="240px" Skin="Metro" DropDownWidth="240px" CheckBoxes="true" EnableCheckAllItemsCheckBox="true" />*@
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwNoteList" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblNoteLogTitle">Notes</h5>
                </div>
                <div>
                    <button id="btnNoteSave" type="button" class="btn">OK</button>
                    <button id="cmdNoteClose" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" id="SelectedNoteKeys" value="" />
                <input type="hidden" id="hdfNoteAcctPKey" value="" />
                <input type="hidden" id="hdfNoteID" value="" />
                @*<asp:ImageButton ID="cmdNoteAdd" Visible="false" runat="server" Height="16px" ImageUrl="~/images/icons/plus.png" ToolTip="Add" />*@
                <div class="col-md-12 pt-1">
                    <label id="" class="lblSmall">Enter Note</label><br />
                    @(Html.Kendo().TextArea().Name("txtNotePre").MaxLength(300).Rows(3).Placeholder("Enter Note").HtmlAttributes(new {@class= "Font11" }))
                </div>
                <div class="col-md-12 pt-1">
                    <img id="cmdNoteDelete" height="16" src="/images/icons/minus.png" title="Delete" style="cursor:pointer;" />
                    <br />
                    @(Html.Kendo().Grid<fcConferenceManager.Models.SpeakerNotes>().Name("dgNotes")
                    .Scrollable()
                    .NoRecords("No results found").Sortable().HtmlAttributes(new { style = "height: 400px;" })
                    .Selectable(s => s.Mode(GridSelectionMode.Multiple))
                    .Events(events => events.Change("onChangeGridNotes"))
                    .DataSource(dataSource => dataSource.Server().Model(model => model.Id(p => p.pKey)))
                    .Columns(columns => {
                        columns.Select().Width(25);
                        columns.Bound(c => c.UpdateDate).HeaderTemplate("Notes").ClientTemplate(@"<label>#:lblNoteText#</label><br /><label class='lblSmall' style='font-style:italic;'>#:lblNoteDate#</label>").Width(250);
                        columns.Command(c => c.Custom("Edit").Text("Edit").HtmlAttributes(new { @class = "gridNotesEditButton" }).Click("onClickNotesEditBtn")).Width(25).Title("Edit");
                    }))
                    @*<telerik:GridButtonColumn ButtonType="ImageButton" UniqueName="Edit" CommandName="cmdEdit" HeaderStyle-Width="35px" HeaderText="Edit" ImageUrl="~/images/icons/gridgray.png" ButtonCssClass="RadRowButton20" HeaderStyle-HorizontalAlign="Center" ItemStyle-HorizontalAlign="Center" />*@
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwNote" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblNoteLogTitle">Notes</h5>
                </div>
                <div>
                    <button id="cmdNoteSave" type="button" class="btn">Save</button>
                    <button id="cmdNoteCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-1">
                    @(Html.Kendo().TextArea().Name("txtNoteEdit").MaxLength(500).Rows(6).Placeholder("Enter Note").HtmlAttributes(new {@class= "Font11" }))
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwExpress" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblExpress">Speaking Notes</h5>
                </div>
                <div>
                    <button id="cmdExpressSave" type="button" class="btn">Save</button>
                    <button id="cmdExpressSave1" type="button" class="btn btn_Yellow">Save</button>
                    <button id="cmdExpressCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" id="hdfExpressID" value="" />
                <input type="hidden" id="hdfExpressName" value="" />
                <div class="col-md-12 pt-2" id="phExpList" style="display:none;">
                    <spen style="display:none;">@(Html.Kendo().CheckBox().Name("ckPrioritySpkr").Label("Featured Speaker"))</spen>
                    <br />
                    <label id="Label1r2" class="lblSmall">Events of Interest:</label><br />
                    <ul id="ckExpressList"></ul>
                </div>
                <div class="col-md-12 pt-2" id="phSesToAdd" style="display:none;">
                    <label class="lblSmall">Select activity to add:</label><br />
                    @(Html.Kendo().DropDownList().Name("ddSecActivity").Text("strText").Value("pKey"))
                    @(Html.Kendo().TextBox().Name("txtSesToAdd").HtmlAttributes(new {style = "display:none;" }))
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwFollowUpRights" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblFollowNotetitle"></h5>
                </div>
                <div>
                    <button id="btnFollowRightSave" type="button" class="btn">OK</button>
                    @* btnMultipleRightSave_Click *@
                    <button id="btnMultipleRightSave" type="button" class="btn" style="display:none;">OK</button>
                    @*  OnClientClick="return Followclose();" *@
                    <button id="btnFollowRightCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" value="" id="hdFURAccount" />
                <div class="col-md-12 p-2">
                    <label id="Label65">MAGI Contact:</label> <br />
                    @{
                        List<SelectListItem> ddFollowUpAccount = new List<SelectListItem>() { new SelectListItem() { Text ="All", Value = "0" } };
                        if (ViewBag.ddSpeakerContact != null)
                        {
                            ddFollowUpAccount.AddRange((List<SelectListItem>)ViewBag.ddSpeakerContact);
                        }
                    }
                    @(Html.Kendo().DropDownList().Name("ddFollowUpAccount").DataTextField("Text").DataValueField("Value").BindTo(ddFollowUpAccount).Value("0").HtmlAttributes(new { style = "width: 100%;min-width:200px;" }))
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="RdPersonalInfo" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdPersonalInfoCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="lblBioHeading"></h5>
                </div>
                <div>
                    <button id="btnSaveBio" type="button" class="btn">Save</button>
                    <button id="btnCancelBio" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <input type="hidden" id="hdfBioAccount" value="" />
                <div class="row pt-2">
                    <div class="col-md-6">
                        <label class="SectionTitle">Personal biography</label>
                        @(Html.Kendo().TextArea().Name("txtPersonalBioview").Rows(9).MaxLength(500).HtmlAttributes(new { style= "background-color: white; color: black;", @class= "Font10" }))
                        <label id="lblBios" class="lblSmall" style="display:none;"></label>
                        <br />
                        <label id="lblBioCounts" class="lblSmall" style="display:none;"></label>
                    </div>
                    <div class="col-md-6">
                        <label class="SectionTitle">About my organization and my role</label><br />
                        @(Html.Kendo().TextArea().Name("txtAboutview").Rows(9).MaxLength(500).HtmlAttributes(new { style= "background-color: white; color: black;",@class= "Font10" }))
                        <br />
                        <label id="lblAboutview" class="lblSmall" style="display:none;"></label>
                    </div>
                </div>
                <div class="col-md-12 pt-1">
                    <label class="modal-title">Comments</label>
                    @(Html.Kendo().TextArea().Name("txtProfileComment").Rows(3).MaxLength(300).HtmlAttributes(new { style= "background-color: white; color: black;",@class= "Font10" }))
                    <br />
                    <label id="lblProfileComment" class="lblSmall" style="display:none;"></label>
                </div>
                <div class="col-md-12 pt-1">
                    <label class="SectionTitle" style="display:none;">CV: </label>
                    <a id="hlCV" href="javacript:void(0);" target="_blank" class="SectionTitle">View</a>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwPossible" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdPersonalInfoCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1">
                    <h5 class="modal-title" id="Label68">Change Status to "Other Session"</h5>
                    <h5 class="modal-title" id="Label71"></h5>
                </div>
                <div>
                    <button id="Button1" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">OK</button>
                    <button id="Button3" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                </div>
            </div>
            <div class="modal-body p-0">
                <div class="col-md-12 pt-1" id="dlOtherSession">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rwPayCredit" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div>
                <label id="closeRdCancel" class="pull-right float-end mb-2" data-bs-dismiss="modal" aria-label="Close" style="cursor:pointer;float:right"><i class="fa fa-close"></i></label>
            </div>
            <div class="modal-header modalBlueHeader">
                <div class="ps-1"><h5 class="modal-title" id="lblCreditAcct">Payment for:</h5></div>
                <div>
                    <button id="cmdPaySave" type="button" class="btn">Proceed</button>
                    <button id="cmdPayCancel" type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>
            <div class="modal-body p-0">
                @{Html.RenderAction("_PartialPayCredit", "MyMagi");}
                <input type="hidden" id="bal" value="" />
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var sound = document.createElement("audio");
    if (!("src" in sound))
        sound = document.createElement("bgsound");
    document.body.appendChild(sound);
    var group = [];
    var collapseIDs = [];
    function onClickNotesEditBtn(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $('#hdfNoteID').val(dataItem.pKey);
        $('#txtNoteEdit').val(dataItem.NoteText);
        $('#rwNote').modal('show');
    }
    function playSound(path, type, sender) {
        var id = "";
        switch (type) {
            case 'N': id = 'lblNickName'; break;
            case 'L': id = 'lblLast'; break;
            case 'P': id = 'lblPhoneticName'; break;
        }
        if (id === '' && sender !== id)
            return false;
        try {
            if (path !== "") {
                sound.src = path;
                sound.play && sound.play().catch(function (error) {
                    console.warn("Kindly Click The Document First!");
                });
            }
        }
        catch (error) {
            console.warn("Kindly Click The Document First!");
        }
    }
    function OnSessionDetailExpand(sender) {
        var id = sender.dataset.id;
        var acid = sender.dataset.acid;
        var l = sender.dataset.l;
        var m = sender.dataset.m;
        var LS = sender.dataset.ls;
        var Ms = sender.dataset.ms;
        if (m === "")
            Ms = "0";
        if (l === "")
            LS = "0";

        var elem = '#phExpandedPeople_' + acid + "_" + id;
        var bright = (sender.src.indexOf("rightTriangle") > 0);
        $(elem).hide();
        if (bright) {
            if (!($(elem + ' table tr').length > 1)) {
                var Data = {
                    AccountID: acid, intSessionPkey: id,
                    intSpkrCurEventPKey: $('#F_intSpkrCurEventPKey').val(),
                    ddlInterested: $('#ddlInterested').val().toString(),
                    ddAccStatus: $("#ddAccStatus").data("kendoDropDownList").value(),
                    ddSpkrFlag: $("#ddSpeakerFlag").data("kendoDropDownList").value(),
                    ddDateRange: $("#ddDateRange").data("kendoDropDownList").value(),
                    dtPStart: $('#dpStart2').val(),
                    dtPEnd: $('#dpEnd2').val(),
                };
                var resultData = CommonFunctions.AjaxCall('GET', '/Operations/GetSessionDetailSpeakers', Data, 'json', 'Error Occurred while Fetching List', "");
                if (resultData !== "ERROR" && resultData.msg === "OK") {
                    var ListSpeakerPeople = JSON.parse(resultData.SpeakersList);
                    var htmlInfo = `<table style="width: 100%"><tr>
                                          <th scope = "col" style = "width: 130px; text-align: left" class="Font10" > Speaker</th>
                                          <th scope="col" style="width: 60px; text-align: left" class="Font10">Status</th>
                                          <th scope="col" style="width: 130px; text-align: left" class="Font10">Session Notes</th>
                                          <th scope="col" style="width: 240px; text-align: left" class="Font10">Title</th>
                                          <th scope="col" style="width: 170px; text-align: left" class="Font10">Organization</th></tr >`;
                    htmlInfo += ListSpeakerPeople.map(function (val) {
                        return '<tr><td class="lblSmall" style="width: 130px; text-align: left;vertical-align:top">'
                            + '<img src="/images/icons/acct.png" title="Profile" data-id="Account_pKey" />'
                            + '<label class="cmdAccountName lblSmall fw-bold">' + val.ContactName + '</label>'
                            + '<label style="display:' + ((val.IsSessionLeader === 1) ? "" : "none") + ';" class="lblIsLeader lblSmall fw-bold">[L]</label>'
                            + '<label style="display:' + ((val.IsSessionModerator === 1) ? "" : "none") + ';" class="lblIsSessionModerator lblSmall fw-bold">[M]</label></td>'
                            + '<td class="lblSmall" style="width: 60px; text-align: left;vertical-align:top">'
                            + '<input type="hidden" class="hdfhomelession" value="' + val.homelession + '" />'
                            + '<input type="hidden" class="hdfNumLeaders" value="' + val.NumLeaders + '" />'
                            + '<input type="hidden" class="hdfNumModerators" value="' + val.NumModerators + '" />'
                            + '<input type="hidden" class="hdfIsSessionLeader" value="' + val.IsSessionLeader + '" />'
                            + '<input type="hidden" class="hdfIsSessionModerator" value="' + val.IsSessionModerator + '" />'
                            + '<input type="hidden" class="hdfTotalLeaderAssigned" value="' + val.TotalLeaderAssigned + '" />'
                            + '<input type="hidden" class="hdfTotalModeratorAssigned" value="' + val.TotalModeratorAssigned + '" />'
                            + '<input type="hidden" class="hdfUnUpdatedSpeaker" value="' + val.UnUpdatedSpeaker + '" />'
                            + '<input type="hidden" id="hdfComments_' + val.AcctSesPKey + '" class="hdfComments" value="' + val.Comments + '" />'
                            + '<input type="hidden" class="hdfNumSpeakers" value="' + val.NumSpeakers + '" />'
                            + '<input type="hidden" class="hdfDueDate" value="' + val.DueDate + '" />'
                            + '<input type="hidden" class="hdfNextConDate" value="' + val.NextConDate + '" />'
                            + '<input type="hidden" class="hdfFlag" value="' + val.SpkrFlag + '" />'
                            + '<input type="hidden" class="hdfList" value="' + val.List + '" />'
                            + '<input type="hidden" class="hdnAccount_pKey" value="' + val.Account_pKey + '" />'
                            + '<input type="hidden" class="hdfAssignmentStatus_pkey" value="' + val.AssignmentStatus_pkey + '" />'
                            + '<input type="hidden" class="hdnEventAcct_PKey" value="' + val.EventAcct_PKey + '" />'
                            + '<input type="hidden" class="hdnAcctSesPKey" value="' + val.AcctSesPKey + '" />'
                            + '<input type="hidden" class="hdnEvtSesPKey" value="' + val.EvtSesPKey + '" />'
                            + '<input type="hidden" class="hdnEventSessionStatus_pkey" value="' + val.EventSessionStatus_pkey + '" />'
                            + '<input type="hidden" class="hdfStatusCountwiseList" value="' + val.StatusCountwiseList + '" />'
                            + '<input type="hidden" class="hdfNeededSpeaker" value="' + val.NeededSpeaker + '" />'
                            + '<a class="cmdPeopleStatusLink lblSmall fw-bold BlackColor" data-id="' + val.AssignmentStatus_pkey + '" >' + val.Status + '</a>'
                            + '</td>'
                            + '<td style="width: 130px; text-align: left;vertical-align:top">'
                            + '<label class="Label80 lblSmall fw-bold" title="' + val.CompleteComm + '">' + val.Comment + '</label>'
                            + '</td>'
                            + '<td style="width: 240px; text-align: left;vertical-align:top">'
                            + '<label class="lblTitle lblSmall fw-bold">' + val.Title + '</label>'
                            + '</td>'
                            + '<td style="width: 170px; text-align: left;vertical-align:top">'
                            + '<label class="Label10 lblSmall fw-bold">' + val.OrgID + '</label>'
                            + '</td></tr>';
                    }).join('');
                    htmlInfo += '</table>';
                    htmlInfo += '<table style="width: 100%"> <tr><td><table style="width: 50%">'
                        + '<tr style="display:' + ((LS === '0') ? "none" : "") + ';">'
                        + '<td width="30%"><label class="lblSmall fw-bold">Leader(s) for this activity: </label></td>'
                        + '<td><label id="lblNoMod2" class="lblSmall fw-bold">' + l + '</label></td>'
                        + '</tr>'
                        + '<tr style="display:' + ((Ms === '0') ? "none" : "") + ';">'
                        + '<td width="30%"><label class="lblSmall fw-bold">Moderator(s) for this activity: </label></td>'
                        + '<td><label id="lblNoMod2" class="lblSmall fw-bold">' + m + '</label></td>'
                        + '</tr>'
                        + '';
                    htmlInfo += ' </tr></table></td></tr></table>'
                    $(elem).html(htmlInfo);
                }
                else
                    CommonFunctions.Alert("Error Occurred While Fetching Speaker Peoples Details");
            }
            $(elem).show();
        }
        sender.src = (bright) ? "/Images/navigation/downtriangle.png?v=" + new Date().toISOString() : "/Images/navigation/rightTriangle.png?v=" + new Date().toISOString();
    }
    function onDetailExpand(args) {
        var rowinfo = args.sender.dataItem(args.masterRow);
        var checked = rowinfo.WritingArticle;
        var Padded = rowinfo.PaddedID;
        group.push(Padded);
        $('#ckWritingArticle_' + rowinfo.AccountPkey).prop("checked", checked);
        var result = CommonFunctions.AjaxCall("POST", '/Operations/SpeakerStatus', '', "JSON", "Error Occurred", "");
        var html = '<option value="0">Select</option>';
        if (result !== "ERROR" && result.msg === "OK") {
            var Status = JSON.parse(result.SpeakerStatusList);
            html += Status.map(function (val) {
                if (rowinfo.SpeakerStatus_pkey === val.pKey)
                    return '<option value="' + val.pKey + '" selected>' + val.strText + '</option>'
                else
                    return '<option value="' + val.pKey + '">' + val.strText + '</option>'
            }).join('');
        }
        else
            CommonFunctions.Alert("Error Occurred While Fetching Details");

        $('#ddSpeakerStatusUpdate_' + rowinfo.AccountPkey).html(html);
        $('#ddSpeakerStatusUpdate_' + rowinfo.AccountPkey).val(rowinfo.SpeakerStatus_pkey);
        var Data = { AccountID: rowinfo.AccountPkey, ckTime: $('#ckTime').is(":checked"), SpeakerEvtID: $('#F_intSpkrCurEventPKey').val(), ddSessStatus: $("#ddSesStatus").data("kendoDropDownList").value() };
        var resultData = CommonFunctions.AjaxCall('GET', '/Operations/GetSessionListData', Data, 'json', 'Error Occurred while Fetching List');
        if (resultData !== "ERROR" && resultData.msg === "OK") {
            var ListSession = JSON.parse(resultData.SessionList);
            var dataHtml = '';
            if (ListSession !== null) {
                dataHtml = ListSession.map(function (val) {
                    var list = val.List;
                    var color = "Black";
                    var boldstring = "fw-bold";
                    if (val.EventSessionStatus_pkey === $('#EvSessionCancel').val() || val.EventSessionStatus_pkey === $('#StatusHypo').val()) {
                        color = "Gray";
                        boldstring = "";
                    }
                    if (!val.IsScheduled)
                        color = "Purple";
                    else if (val.IsHideFromPublic)
                        color = "Gray";
                    else {
                        var i = 0, r = 0, b = 0, g = 0, Ei = 0, l = 0, A = 0;
                        var wordcount = list.split(",");
                        list.split(",").map(function (wd) {
                            if (wd === "2" || wd === "1") {
                                A = A + 1;
                                i = i + 1;
                                r = 0;
                                b = b + 1;
                                g = g + 1;
                            }
                            else if (A <= 0 && wd === "19") {
                                i = i + 1;
                                l = l + 1;
                            }
                            else if (r <= 0) {
                                if (wd === "10" || wd === "11" || wd === "12" || wd === "23" && (wd !== "2")) {
                                    b = b + 1;
                                    g = g + 1;
                                }
                            }

                        });
                        if (val.numspeakers === i || i === 8) {
                            if (A === 0 && l > 0)
                                color = "Green";
                            else if (A > 0)
                                color = "LimeGreen";
                        }
                        else if (val.numspeakers < i)
                            color = "Red";
                        else if (i > 0 && val.numspeakers > i)
                            color = "Blue";
                    }

                    var strPendingAcctName = rowinfo.FirstName + " " + rowinfo.LastName;

                    return '<div class="col-md-12">' +
                        '<table style="width: 100%"><tr> <td style="width: 113px; padding-top: 5px;">' +
                        '<input type="hidden" class="hdfHomeLession" value="' + val.homelession + '" />' +
                        '<input type="hidden" class="hdfIsHideFromPublic" value="' + val.IsHideFromPublic + '" />' +
                        '<input type="hidden" class="hdfNumLeaders" value="' + val.NumLeaders + '" />' +
                        '<input type="hidden" class="hdfNumModerators" value="' + val.NumModerators + '" />' +
                        '<input type="hidden" class="hdfIsSessionLeader" value="' + val.IsSessionLeader + '" />' +
                        '<input type="hidden" class="hdfIsSessionModerator" value="' + val.IsSessionModerator + '" />' +
                        '<input type="hidden" class="hdfTotalLeaderAssigned" value="' + val.TotalLeaderAssigned + '" />' +
                        '<input type="hidden" class="hdfTotalModeratorAssigned" value="' + val.TotalModeratorAssigned + '" />' +
                        '<input type="hidden" class="hdfStatusCountwiseList" value="' + val.StatusCountwiseList + '" />' +
                        '<input type="hidden" class="hdfNeededSpeaker" value="' + val.NeededSpeaker + '" />' +
                        '<input type="hidden" class="hdfIsScheduled" value="' + val.IsScheduled + '" />' +
                        '<input type="hidden" class="hdfnumspeakers" value="' + val.numspeakers + '" />' +
                        '<input type="hidden" class="hdfDueDate" value="' + val.DueDate + '" />' +
                        '<input type="hidden" class="hdfIsHaveSlide" value="' + val.IsHaveSlide + '" />' +
                        '<input type="hidden" class="hdfIsCancelReg" value="' + val.IsCancelReg + '" />' +
                        '<input type="hidden" class="hdfNextConDate" value="' + val.NextConDate + '" />' +
                        '<a class="cmdSessionID ' + boldstring + '" data-id="' + val.EvtSesPKey + '" style="color:' + color + ';">' + val.SessionID + '</a> ' +
                        '<span class="lblSessionPriority Font10 fw-bold">' + val.SessionPriority + '</span>' +
                        '<img clss="imgRemove" height="10px"  src="/images/icons/remove-icon.png"  data-id="' + val.AcctSesPKey + '" title="Remove" />' +
                        '<img clss="imgViewPeople" height="10px"  src="/images/navigation/rightTriangle.png"  data-id="' + val.Session_pkey + '" data-acid="' + rowinfo.AccountPkey + '" data-l="' + val.Leader + '" data-m="' + val.Moderator + '" data-ms="' + val.IsModShow + '" data-ls="' + val.IsLeaderShow + '" onclick="OnSessionDetailExpand(this);" title="Expand" style="width:12px;cursor:pointer;" />' +
                        ' </td>' +
                        '<td style="padding-left: 10px; padding-top: 5px; " colspan="3"> ' +
                        '<span class="lblSessiontitle Font10 fw-bold me-1">' + val.SessionTitle + '</span>' +
                        '<span class="Label47 Font10">' + ((val.ContactName === null) ? '' : val.ContactName) + '</span>' +
                        '</td></tr>' +
                        ' <tr><td style="width: 80px; padding-top: 5px;"></td><td style="padding-left: 10px; padding-top: 5px;"  colspan="3"><label class="Font10" style="font-style: italic;">' + val.Approach + '</label></td> </tr>' +
                        '<tr> <td style="width: 80px; padding-top: 5px;"></td>  <td style="background-color: beige; padding-left: 10px; padding-top: 5px;padding-bottom:5px;">' +
                        '<input type="hidden" class="hdfStatusValue" value="' + val.Status + '" />' +
                        '<input type="hidden" class="hdfIsAllowRegCancel" value="' + val.IsAllowCancelReg + '" />' +
                        '<input type="hidden" class="hdfEvtSesPKey" value="' + val.EvtSesPKey + '" />' +
                        '<a data-name="' + strPendingAcctName + '" data-haveSlide="' + val.IsHaveSlide + '"  data-espk="' + val.EvtSesPKey + '" data-evtAcc= "' + rowinfo.EventAccount_pKey + '" data-date="' + rowinfo.NextFollowUpdate + '" data-acsp="' + val.AcctSesPKey + '" data-id="' + rowinfo.AccountPkey + '" data-sp="' + val.Session_pkey + '" class="cmdStatusLink Font10 me-1" data-statusId="' + val.AssignmentStatus_pKey + '" data-sid="' + val.SessionID + '" style="cursor:pointer;">' + val.Status + '</a>' +
                        '<span class="lblIsLeader lblSmall fw-bold me-1" style="display: ' + (val.IsSessionLeader ? "" : "none") + ';">[L]</span>' +
                        '<span class="lblIsSessionModerator lblSmall fw-bold  me-1" style="display: ' + (val.IsSessionModerator ? "" : "none") + ';">[M]</span>' +
                        '<span class="lblcomments lblSmall fw-bold me-1" style="background-color:lightskyblue;font-style: italic;">' + val.Focus_and_Comments + '</span>' +
                        '<a class="lnkhistory me-1" data-status="' + val.AssignmentStatus_pKey + '" data-sid="' + val.SessionID + '"  data-eid="' + rowinfo.EventAccount_pKey + '" data-sp="' + val.Session_pkey + '"  data-acsp="' + val.AcctSesPKey + '" data-id="' + rowinfo.AccountPkey + '" data-name="' + strPendingAcctName + '" title="Comment History" style="display:' + (val.IsShowHistory.toLowerCase() === "false" ? "none" : "") + ';text-decoration: none;"> <img src="/images/icons/eye.gif"  title="Comment History" />  </a>' +
                        '<br /></td>' +
                        '<td><label class="Font10 me-1" style="display: ' + (val.VisibleModerator ? "" : "none") + ';font-style: italic;background-color:lightskyblue;">Moderator</label></td>' +
                        '<td><label class="Font10 me-1" style="display: ' + (val.VisibleLeader ? "" : "none") + ';font-style: italic;background-color:yellow;">Leader</label></td></tr>' +
                        '<tr><td style="width: 80px; padding-top: 5px;"></td><td style="padding-left: 10px; padding-top: 5px;"  colspan="3">' +
                        '<div id="phExpandedPeople_' + (rowinfo.AccountPkey + "_" + val.Session_pkey) + '"  class="col-md-12"></div></td></tr>' +
                        ' </table>';

                }).join('');
            }
            $('#ddSessions_' + rowinfo.AccountPkey).html(dataHtml);
        }
        else
            CommonFunctions.Alert("Error Occurred While Fetching Details");

    }
    function onChange(arg) {
        console.log("The selected ids are: [" + this.selectedKeyNames().join(", ") + "]");
    }
    function onChangeGrid(arg) {
        var selected = this.selectedKeyNames().join(",");
        $('#SelectedCommentKeys').val(selected);
    }
    function onChangeGridNotes(arg) {
        var selected = this.selectedKeyNames().join(",");
        $('#SelectedNoteKeys').val(selected);
    }
    function Fn__NotesshowMore(objId, type) {
        var ID = objId.id;
        if (type == 0) {
            objId.nextElementSibling.style.display = 'block';
            objId.style.display = 'none';
        }
        else {
            objId.parentElement.style.display = 'none';
            objId.parentNode.previousSibling.style.display = 'block';
        }
    }
    function Fn_showMore(objId, type) {
        var ID = objId.id;
        if (type == 0) {
            var secondDiv = objId.parentNode.nextSibling;
            var firstDiv = objId.parentNode;
            secondDiv.style.display = "block";
            firstDiv.style.display = "none";
        }
        else {
            var secondDiv = objId.parentNode;
            var firstDiv = objId.parentNode.previousSibling;
            secondDiv.style.display = "none";
            firstDiv.style.display = "block";
        }
    }
    function LoadPageStats(page) {
        page = page - 1;

        var iStartsRecods = 0;
        var iCurrentRecord = 0;
        var PageSize = 50;
        var iTotalSelected = $('#CountRows').val();
        var totalRows = $('#TotalRows').val();
        if (iTotalSelected !== 0 && totalRows !== 0) {
            var iEndRecord = 0;
            if (page > 0)
                iEndRecord = ((iTotalSelected - (page * 50)) > 50) ? 50 : (iTotalSelected - (page * 50));
            else
                iEndRecord = 50;

            iStartsRecods = iEndRecord - PageSize;

            if (iEndRecord > iTotalSelected)
                iEndRecord = iTotalSelected;

            if (iStartsRecods < 0)
                iStartsRecods = 0;

            if (iEndRecord === 0)
                iEndRecord = iTotalSelected;

            iCurrentRecord = iEndRecord;
        }
        var textString = iCurrentRecord + " shown of " + parseInt(iTotalSelected).toLocaleString() + " selected of " + parseInt(totalRows).toLocaleString() + " total";
        $('#lblRowscount').text(textString);
    }
    function onPaging(options) {
        LoadPageStats(options.page)
    }
    function OnDetailCollapse(args) {
        var rowData = args.sender.dataItem(args.masterRow);
        group.indexOf(rowData.PaddedID);
        group.pop(group.indexOf(rowData.PaddedID));
        if (collapseIDs.length > 0) {
            var index = collapseIDs.findIndex(function (data) {
                return data.ID == rowData.PaddedID
            });
            collapseIDs.pop(index);
        }
    }
    function onDataBound() {
        var idsFound = [];
        var grid = $("#grid").data("kendoGrid");
        if (collapseIDs.length > 0) {
            $.each(collapseIDs, function (i, data) { idsFound.push(data.val); });
            grid.expandRow(grid.tbody.children().filter(function (idx, row) { return $.inArray($(row).data("uid"), idsFound) >= 0; }));
        }
    }
    function onDataBinding(args) {
        var items = args.items;
        if (items.length > 0) {
            $.each(items, function (i, val) {
                if (group.indexOf(val.PaddedID) > -1)
                    collapseIDs.push({ ID: val.PaddedID, val: val.uid });
            });
        }
    }
    function GridSuccessCallback(result) {
        if (result !== null && result !== "ERROR" && result.msg !== "") {
            var Alpha = result.alpha.split(',');
            var Rowscount = result.RowsCount;
            var Rows = result.TotalRecords;
            $('#CountRows').val(Rowscount);
            $('#TotalRows').val(Rows);
            LoadPageStats(1);
            if (result.alpha !== "") {
                $('.AlphaLinks').map(function (val, i) {
                    if (Alpha.includes(i.text)) {
                        if ($('#txtLName').val() === i.text) {
                            i.style.fontWeight = 'bold';
                            i.style.textDecoration = 'none';
                            i.style.cursor = 'default';
                        }
                        else {
                            i.style.textDecoration = "underline";
                            i.style.fontWeight = 'normal';
                            i.style.cursor = 'pointer';
                        }
                        i.style.pointerEvents = "auto";
                        i.style.color = "blue";
                    }
                    else {
                        i.style.textDecoration = "none";
                        i.style.pointerEvents = "none";
                        i.style.color = "black";
                    }
                });
            }
            var grid = $("#grid").data("kendoGrid");

            if ($('#ckThumbnails').is(":checked") === true)
                grid.showColumn("ContactName");
            else
                grid.hideColumn("ContactName");

            if ($('#ckFinalDisp').is(":checked") === true)
                grid.showColumn("FinalDisp");
            else
                grid.hideColumn("FinalDisp");

            grid.dataSource.data(result.data);
        }
        CommonFunctions.LoadingStop();
    }
    function ExportSuccessCallback(result) {
        if (result !== null && result !== "ERROR" && result.msg === "OK") {
            var link = document.createElement('a');
            var bytes = new Uint8Array(result.FileHandle.FileContents);
            var blob = new Blob([bytes], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = result.FN;
            link.click();
            link.remove();
        }
        else
            CommonFunctions.Alert("Error occurred while exporting data");
        CommonFunctions.LoadingStop();
    }
    function getFilterObject() {
        var filterInfo = {
            ddSesStatus: $("#ddSesStatus").data("kendoDropDownList").value(),
            ddlInterested: $('#ddlInterested').val().toString(),
            ddSpkrFlag: $("#ddSpeakerFlag").data("kendoDropDownList").value(),
            ddCountry: $("#ddCountry").data("kendoDropDownList").value(),
            ddStatus: $("#ddStatus").data("kendoDropDownList").value(),
            ddOrgType: $("#ddOrganizationType").data("kendoDropDownList").value(),
            ddTimezone: $("#ddTimeZone").data("kendoDropDownList").value(),
            ddDateRange: $("#ddDateRange").data("kendoDropDownList").value(),
            ddSpeakerStatus: $("#ddSpeakerStatus").data("kendoDropDownList").value(),
            ddRating: $("#ddSpeakerRating").data("kendoDropDownList").value(),
            ddAccStatus: $("#ddAccStatus").data("kendoDropDownList").value(),
            ddContacted: $("#ddContacted").data("kendoDropDownList").value(),
            ddTrack: $("#ddTrackList").data("kendoDropDownList").value(),
            ddPastActivity: $("#ddPastActivity").data("kendoDropDownList").value(),
            ddResult: $("#ddResultsList").data("kendoDropDownList").value(),
            ddFinalDispVal: $("#ddFinalDisp").data("kendoDropDownList").value(),
            ckFinalDisp: $('#ckFinalDisp').is(":checked"),
            chkComment: $('#chkComment').is(":checked"),
            chkHideNotes: $('#chkshowOnlyNotes').is(":checked"),
            chkAnnouncementshow: $('#chkAnnouncementshow').is(":checked"),
            chkShowNoteEFree: $('#chkShowNoteEFree').is(":checked"),
            chkCallnotesEvent: $('#chkCallnotesEvent').is(":checked"),
            chkSelectedPeople: $('#chkSelectedPeople').is(":checked"),
            chkAddedBy: $('#chkAddedBy').is(":checked"),
            chkPriorities: $('#ckPriorities').is(":checked"),
            bSpkrMgAtt: $('#ckAttending').is(":checked"),
            bSpkrMgRecent: $('#ckFollowUp').is(":checked"),
            bSpkrMgNote: $('#ckRecentNote').is(":checked"),
            bSpkrMgTN: $('#ckThumbnails').is(":checked"),
            bSpkrMgTime: $('#ckTime').is(":checked"),
            strddlNotiner: $('#ddlNotiner').val().toString(),
            strPriorspeaker: $('#priorSpeakerAtEvent').val().toString(),
            strParticipation: $('#participationEvent').val().toString(),
            strInterestedEvent: $('#ddEventInterest').val().toString(),
            streventInterested: $('#ddEventInterest').val().toString(),
            cbddlInterested: $('#ddlInterested').val().toString(),
            strFollowupRight2: $('#ddFollowupRights2').val().toString(),
            strSpeakerStatus: $("#ddSpeakerStatus").data("kendoDropDownList").value(),
            strSpeakerFlag: $('#ddSpeakerFlag').data("kendoDropDownList").text(),
            ddDateType: $("#ddFollowUpDate").data("kendoDropDownList").value(),
            ddDateRange: $("#ddDateRange").data("kendoDropDownList").value(),
            strName: $("#txtLName").val(),
            strSearch: $("#txtSearch").val(),
            strnotes: $('#txtContactNotes').val(),
            strOrg: $('#txtOrganization').val(),
            strID: $('#txtID').val(),
            dtStart: $('#dpStart').val(),
            dtEnd: $('#dpEnd').val(),
            dtPStart: $('#dpStart2').val(),
            dtPEnd: $('#dpEnd2').val(),
            bAcctSpecialArrangement: false,
            intSpkrCurEventPKey: $('#F_intSpkrCurEventPKey').val(),
            bSpkrMgFD: $('#F_bSpkrMgFD').val(),
            bNoEvents: $('#F_bNoEvents').val(),
            SelchkStrSpkr: $('#F_SelchkStrSpkr').val(),
            strDemiSpkrMgID: $('#F_strDemiSpkrMgID').val(),
            intDemiSpkrMgID: 0,
            rbTop: 0,
            strAnnouncement: "",
            strevents: "",
            OtherDate: $('#F_otherDate').val(),
        };
        return filterInfo;
    }
    function customRead(options) {
        function SuccessCallback(result) {
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                var Alpha = result.alpha.split(',');
                var Rowscount = result.RowsCount;
                var Rows = result.TotalRecords;
                $('#CountRows').val(Rowscount);
                $('#TotalRows').val(Rows);
                LoadPageStats(1);
                if (result.alpha !== "") {
                    $('.AlphaLinks').map(function (val, i) {
                        if (Alpha.includes(i.text)) {
                            if ($('#txtLName').val() === i.text) {
                                i.style.fontWeight = 'bold';
                                i.style.textDecoration = 'none';
                                i.style.cursor = 'default';
                            }
                            else {
                                i.style.textDecoration = "underline";
                                i.style.fontWeight = 'normal';
                                i.style.cursor = 'pointer';
                            }
                            i.style.pointerEvents = "auto";

                            i.style.color = "blue";
                        }
                        else {
                            i.style.textDecoration = "none";
                            i.style.pointerEvents = "none";
                            i.style.color = "black";
                        }
                    });
                }
                options.success(result.data);
                var grid = $("#grid").data("kendoGrid");

                if ($('#ckThumbnails').is(":checked") === true)
                    grid.showColumn("ContactName");
                else
                    grid.hideColumn("ContactName");

                if ($('#ckFinalDisp').is(":checked") === true)
                    grid.showColumn("FinalDisp");
                else
                    grid.hideColumn("FinalDisp");
            }
            CommonFunctions.LoadingStop();
        }
        CommonFunctions.AjaxasyncCall("POST", '/Operations/SpeakerGridData', { Model: JSON.parse($('#SpeakerFilterData').val()) }, "JSON", SuccessCallback, "");
    }
    function SpeakerGridRefresh() {
        CommonFunctions.AjaxasyncCall("POST", '/Operations/SpeakerGridData', { Model: getFilterObject() }, "JSON", GridSuccessCallback, "");
    }
    function SkypeCallHistory(Account_pkey, FirstName, LastName) {
        var CallRecording = {
            Account_pkey: Account_pkey,
            Event_pkey: $('#F_intSpkrCurEventPKey').val(),
        };
        $.ajax({
            url: '/api/Call/CallList', type: 'POST', dataType: 'json', data: CallRecording,
            success: function (data, textStatus, xhr) {
                var GridData = data;
                var GridId = $("#dgskype").data("kendoGrid");
                if (GridId)
                    GridId.dataSource.data(GridData);

                $('#rwSkypeHistory').modal('show');
            },
            error: function () { CommonFunctions.Alert('Error on binding the data'); }
        });
    }
    function onEditStatusChange(args) {
        var data = {
            ddEditStatus: $("#ddEditStatus").data("kendoDropDownList").value(),
            PendingSession: $('#hdfSSessionID').val(),
            HaveSlide: $('#hdfSHaveSlides').val(),
            AccountID: $('#hdfSAccountID').val(),
            AccountSession: $('#hdfSAccountSession').val(),
            tdDueDateVisible: $('#tdDueDate')[0].hidden,
            ckTime: $('#ckTime').is(":checked"),
            SpeakerEvtID: $('#F_intSpkrCurEventPKey').val(),
            ddSessStatus: $("#ddSesStatus").data("kendoDropDownList").value()
        };
        var resultData = CommonFunctions.AjaxCall('GET', '/Operations/CallstatusFun', data, 'json', 'Error Occurred while Fetching Data');
        if (resultData !== "ERROR" && resultData.msg === "OK") {
            $("#checkIsSlide,#checkOfferLeader,#checkOfferMod,#checkIsLeader,#checkIsModu,#cmdStatusSaveWithoutEmailSaveVisible").hide();
            $("#checkRemoveEvent,#checkRemoveSlide,#checkCharge,#lblSpeakerPaid").hide();
            $('#tdDueDate,#trrddatetimepicker,#cmdStatusSaveWithoutEmailSave,#phIsAssigned').hide();
            $('#chkIsSlide').prop("checked", resultData.chkIsSlideChecked);
            $('#chkIsLeader').prop("checked", resultData.chkIsLeaderChecked);
            $('#chkIsModu').prop("checked", resultData.chkIsModuChecked);
            $('#chkRemoveEvent').prop("checked", resultData.chkRemoveEventChecked);
            $('#chkRemoveSlide').prop("checked", resultData.chkRemoveSlideChecked);
            $('#chkCharge').prop("checked", resultData.chkChargeChecked);
            $('#chkCancelRef').prop("checked", resultData.chkCancelRefChecked);
            $('#cmdStatusSave').text(resultData.cmdStatusSaveText);
            $('#cmdStatusSaveWithoutEmailSave').text(resultData.cmdStatusSaveWithoutEmailSaveText);
            $('#cmdFinish').text(resultData.cmdFinishText);
            $('#chkIsLeader').prop("disabled", !resultData.chkIsLeaderEnabled);
            $('#chkIsModu').prop("disabled", !resultData.chkIsModuEnabled);
            $('#cmdStatusSave').attr("style", " cursor:pointer");
            if (resultData.phIsAssigned)
                $('#phIsAssigned').show();
            if (resultData.chkIsSlideVisible)
                $('#checkIsSlide').show();
            if (resultData.chkIsLeaderVisible)
                $('#checkIsLeader').show();
            if (resultData.chkIsModuVisible)
                $('#checkIsModu').show();
            if (resultData.chkOfferModVisible)
                $('#checkOfferMod').show();
            if (resultData.chkOfferLeaderVisible)
                $('#checkOfferLeader').show();
            if (resultData.chkChargeVisible)
                $('#checkCharge').show();
            if (resultData.chkRemoveSlideVisible)
                $('#checkRemoveSlide').show();
            if (resultData.chkRemoveEventVisible)
                $('#checkRemoveEvent').show();
            if (resultData.cmdStatusSaveWithoutEmailSaveVisible)
                $('#cmdStatusSaveWithoutEmailSave').show();
            if (resultData.lblSpeakerPaid)
                $('#lblSpeakerPaid').show();
            if (resultData.tdDueDateVisible)
                $('#tdDueDate').show();
            if (resultData.trrddatetimepickerVisible)
                $('#trrddatetimepicker').show();
            if (resultData.cmdStatusSaveText !== "Save")
                $('#cmdStatusSave').attr("style", "background-color:yellow;cursor:pointer");

            var htmlString = '';
            if (resultData.dtOtherSpot != null) {
                var infoResult = JSON.parse(resultData.dtOtherSpot);
                $.each(infoResult, function (val, i) {
                    htmlString += " <input type='hidden' data-id='" + i.Account_pkey + "' data-esp='" + i.EventSession_pkey + "' data-sid='" + i.SessionID + "' data-acsp = '" + i.AcctSesPKey + "' id='dlData_" + i.AcctSesPKey + "' />" +
                        " <span> <input type='checkbox' " + (i.ISCHECKED ? "Checked" : "") + " id='chkActivity_" + i.AcctSesPKey + "' /> " + i.SessionIDStatus + "</span> " +
                        " <span> <input type='checkbox' " + (i.ISCHECKED ? "Checked" : "") + " id='chkRemove_" + i.AcctSesPKey + "' /> Remove Slides</span>";
                });
            }
            $('#dlOtherSpot').html(htmlString);
            if (resultData.rwWindowOpen)
                $('#rwCancel').modal('show');


            var htmlString1 = '';
            if (resultData.dlOtherSessionSpot != null) {
                var infoResult1 = JSON.parse(resultData.dlOtherSessionSpot);
                $.each(infoResult1, function (val, i) {
                    htmlString1 += "<div class='col-md-6'> <input type='hidden' data-id='" + i.Account_pkey + "' data-esp='" + i.EventSession_pkey + "' data-sid='" + i.SessionID + "' data-acsp = '" + i.AcctSesPKey + "' id='dlData_" + i.AcctSesPKey + "' />" +
                        " <span> <input type='checkbox' Checked id='chkSActivity_" + i.AcctSesPKey + "' /> " + i.SessionIDWithtitle + "</span> </div><div class='col-md-6'> <label class='lblcommentspo lblSmall'>Comments:</label><br /> <textarea id='textarea_" + i.AcctSesPKey + "' class='Font11' rows='6' ></textarea> </div>";
                });
            }
            $('#dlOtherSession').html(htmlString1);
            if (resultData.showPossible)
                $('#rwPossible').modal('show');
        }
    }
    function FollowupRightsOpen(ID, pendingName, Account_pkey) {
        $('#lblFollowNotetitle').text("MAGI Contact for " + pendingName);
        $('#ddFollowUpAccount').data("kendoDropDownList").value(ID);
        $('#hdFURAccount').val(Account_pkey);
        $('#rwFollowUpRights').modal('show');
    }
    $(document).ready(function () {

        $("#ddSecActivity").kendoDropDownList({
            dataTextField: "strText",
            dataValueField: "pkey",
            /* filter: "contains",*/
            autoClose: false
        });

        $(document).on('click', '.toggleClick', function () {
            var src = $(this).attr("src");
            var srcNew = (src.includes("righttriangle")) ? "/Images/navigation/downtriangle.png" : "/Images/navigation/righttriangle.png";
            $(this).attr("src", srcNew);
        });

        $('#participationEvent,#priorSpeakerAtEvent,#ddEventInterest,#ddFollowupRights2').multipleSelect({
            multiple: false, isopen: false, placeholder: 'All', selectAllText: 'Check all', selectAll: true, multiple: false, multipleWidth: 'auto', filter: false, width: 'auto', height: 28, maxHeight: 250, // onClick: function () { onChangeFunction(); },
        });

        $('#ddlNotiner,#ddlInterested').multipleSelect({
            multiple: false, isopen: false, placeholder: 'All', selectAll: false, selectAllText: '', multiple: false, multipleWidth: 'auto', filter: false, width: 'auto', height: 28, maxHeight: 250, // onClick: function () { onChangeFunction(); },
        });

        function setDefaults() {
            if ($("#ddDateRange").data("kendoDropDownList") !== undefined)
                $("#ddDateRange").data("kendoDropDownList").value($('#F_ddDateRange').val());
            if ($("#ddTimeZone").data("kendoDropDownList") !== undefined) {
                var index = parseInt($('#F_ddTimezone').val());
                $("#ddTimeZone").data("kendoDropDownList").select(index);
            }
            if ($("#ddOrganizationType").data("kendoDropDownList") !== undefined)
                $("#ddOrganizationType").data("kendoDropDownList").value($('#F_intOrgType').val());
            if ($("#ddSpeakerStatus").data("kendoDropDownList") !== undefined)
                $("#ddSpeakerStatus").data("kendoDropDownList").value($('#F_intSpeakerStatus').val());
            if ($("#ddSpkrFlag").data("kendoDropDownList") !== undefined)
                $("#ddSpkrFlag").data("kendoDropDownList").value($('#F_intSpkrFlag').val());
            if ($("#ddCountry").data("kendoDropDownList") !== undefined)
                $("#ddCountry").data("kendoDropDownList").value($('#F_intCountry').val());
            if ($("#ddSesStatus").data("kendoDropDownList") !== undefined)
                $("#ddSesStatus").data("kendoDropDownList").value($('#F_intSesStatus').val());
            if ($("#ddContacted").data("kendoDropDownList") !== undefined)
                $("#ddContacted").data("kendoDropDownList").value($('#F_intContacted').val());
            if ($("#ddAccStatus").data("kendoDropDownList") !== undefined)
                $("#ddAccStatus").data("kendoDropDownList").value($('#F_intAccStatus').val());
            if ($("#ddPastActivity").data("kendoDropDownList") !== undefined)
                $("#ddPastActivity").data("kendoDropDownList").value($('#F_intPastActivity').val());
            if ($("#ddStatus").data("kendoDropDownList") !== undefined)
                $("#ddStatus").data("kendoDropDownList").value($('#F_intStatus').val());
            if ($("#ddDateRange").data("kendoDropDownList") !== undefined)
                $("#ddDateRange").data("kendoDropDownList").value($('#F_ddDateRange').val());
            if ($("#ddSpeakerRating").data("kendoDropDownList") !== undefined)
                $("#ddSpeakerRating").data("kendoDropDownList").value($('#F_intRating').val());
            if ($("#ddTrackList").data("kendoDropDownList") !== undefined)
                $("#ddTrackList").data("kendoDropDownList").value($('#F_intTrack').val());
            if ($("#ddResultsList").data("kendoDropDownList") !== undefined)
                $("#ddResultsList").data("kendoDropDownList").value($('#F_intResult').val());
            if ($("#ddFinalDisp").data("kendoDropDownList") !== undefined)
                $("#ddFinalDisp").data("kendoDropDownList").value($('#F_intFinalDispVal').val());
            if ($("#ddSpeakerFlag").data("kendoDropDownList") !== undefined)
                $("#ddSpeakerFlag").data("kendoDropDownList").value($('#F_strSpeakerFlag').val());
            if ($("#ddFollowUpDate").data("kendoDropDownList") !== undefined)
                $("#ddFollowUpDate").data("kendoDropDownList").value($('#F_intDateType').val());

            $('#ddlInterested').multipleSelect('setSelects', $('#F_streventInterested').val().split(","));
            $('#priorSpeakerAtEvent').multipleSelect('setSelects', $('#F_strPriorspeaker').val().split(","));
            $('#ddlNotiner').multipleSelect('setSelects', $('#F_strddlNotiner').val().split(","));
            $('#ddEventInterest').multipleSelect('setSelects', $('#F_strevents').val().split(","));
            $('#participationEvent').multipleSelect('setSelects', $('#F_strParticipation').val().split(","));
            $('#ddFollowupRights2').multipleSelect('setSelects', $('#F_strFollowupRight2').val().split(","));
            $("#txtLName").val();
            $('#txtOrganization').val($('#F_strOrg').val());
            $('#txtID').val($('#F_strID').val());
            $('#txtContactNotes').val($('#F_strnotes').val());
            $('#dpStart').val($('#F_dtStart').val());
            $('#dpEnd').val($('#F_dtEnd').val());
            $('#dpStart2').val($('#F_dtPStart').val());
            $('#dpEnd2').val($('#F_dtPEnd').val());
            $('#txtSearch').val($('#F_strName').val());
            group = [];
        }

        setDefaults();

        $('#btnExport').click(function (e) {
            e.preventDefault();
            CommonFunctions.AjaxasyncCall("POST", '/Operations/ExportData', { Model: getFilterObject(), strTabName: "People" }, "JSON", ExportSuccessCallback, "");
        });

        $('#btnSearch').click(function (e) {
            e.preventDefault();
            SpeakerGridRefresh();
        });

        $('#btnReset').click(function (e) {
            e.preventDefault();
            setDefaults();
            SpeakerGridRefresh();
        });

        $(document).on('click', '.Idclick', function (e) {
            var elemid = this.dataset.id;
            var result = CommonFunctions.AjaxCall('POST', '/Operations/EditSpeakerInfo', { id: elemid }, 'json', 'Error Occurred while performing action');
            if (result !== "ERROR" && result.msg === "OK")
                window.location.href = result.url;
            else if (result !== "ERROR" && result.msg !== "OK")
                CommonFunctions.Alert(result.msg);
            else
                CommonFunctions.Alert("Error Occurred While Fetching Details");
        });

        $(document).on('click', '.AlphaLinks', function () {
            var selectedText = this.text;
            $('#txtLName').val(selectedText);
            CommonFunctions.AjaxasyncCall("POST", '/Operations/SpeakerGridData', { Model: getFilterObject() }, "JSON", GridSuccessCallback, "");
        });

        $('#ckFinalDisp').change(function () {
            var grid = $("#grid").data("kendoGrid");
            if ($('#ckFinalDisp').is(":checked") === true)
                grid.showColumn("FinalDisp");
            else
                grid.hideColumn("FinalDisp");
        });

        $('#ckThumbnails').change(function () {
            var grid = $("#grid").data("kendoGrid");
            if ($('#ckThumbnails').is(":checked") === true)
                grid.showColumn("ContactName");
            else
                grid.hideColumn("ContactName");
        });

        $('#ddFollowUpDate').change(function () {
            var val = $("#ddFollowUpDate").data("kendoDropDownList").value();
            var datepicker = $("#dpStart").data("kendoDatePicker");
            var datepEnd = $("#dpEnd").data("kendoDatePicker");
            if (val === '3') {
                datepicker.enable(true);
                datepEnd.enable(true);
            }
            else {
                datepicker.enable(false);
                datepEnd.enable(false);
            }
        });

        $('#ddDateRange').change(function () {
            var val = $("#ddDateRange").data("kendoDropDownList").value();
            var datepicker = $("#dpStart2").data("kendoDatePicker");
            var datepEnd = $("#dpEnd2").data("kendoDatePicker");
            if (val === '5') {
                datepicker.enable(true);
                datepEnd.enable(true);
            }
            else {
                datepicker.enable(false);
                datepEnd.enable(false);
            }
        });

        $(document).on('click', '.cmdContactbtn', function () {
            var dataID = this.dataset.id;
            var eaDataID = this.dataset.eaid;
            $('#loadTemp').load('/Operations/_PartialContact', {
                chkCallnotesEvent: $('#chkCallnotesEvent').is(":checked"), chkAnnouncementshow: $('#chkAnnouncementshow').is(":checked"),
                intSpkrCurEventPKey: $('#F_intSpkrCurEventPKey').val(), AccountID: dataID, PendingEvtAccPKey: eaDataID
            }, function () {
                $('#dpTime,#ddConFolDate').val("");
            });
        });

        $(document).on('change', '.ddSpeakerStatusUpdate', function (e) {
            function SuccessResultUpdate(result) {
                if (result !== null && result !== "ERROR" && result.msg !== "") {
                    if (result.msg !== "OK")
                        CommonFunctions.Alert(result.msg);
                }
                else
                    CommonFunctions.Alert("Error occurred while updating speaker status");
                CommonFunctions.LoadingStop();
            }
            var value = this.value;
            var text = this.selectedOptions[0].text;
            var dataID = this.dataset.id;
            var Name = this.dataset.name;
            var data = {
                SpeakerStatus: value,
                Status: text,
                PendingID: dataID,
                ContactName: Name
            };
            CommonFunctions.AjaxasyncCall("POST", '/Operations/UpdateSpeakerstaus', data, "JSON", SuccessResultUpdate, "");
        });

        $(document).on('click', '.btnFlagAssigned', function () {
            var dataID = this.dataset.id;
            var spf = this.dataset.spf;
            var name = this.dataset.name;
            $('#lblFlagCommentTitle2').text("Flag for " + name);
            $('#txtFlagComments2').val("");
            $('#dFlag2').data("kendoDropDownList").value(spf);
            if (spf === undefined)
                $('#dFlag2').data("kendoDropDownList").value(0);
            $('#Flag2Data').attr("data-id", dataID);
            $('#Flag2Data').val(dataID);
            $('#RdFlag2').modal('show');
        });

        function ReviewStatus(dataID, Name) {
            var data = { ID: dataID, name: Name };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/UpdateReviewStatus', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg !== "OK")
                    CommonFunctions.Alert(result.msg);
                else
                    SpeakerGridRefresh();
            }
            else
                CommonFunctions.Alert("Error occurred while updating status");
        }

        function ResetStatus(dataID, Name) {
            var data = { ID: dataID, name: Name };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/ResetInterested', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg !== "OK")
                    CommonFunctions.Alert(result.msg);
                else
                    SpeakerGridRefresh();
            }
            else
                CommonFunctions.Alert("Error occurred while updating status to interested");
        }

        $(document).on('click', '.cmdReview', function () {
            var dataID = this.dataset.id;
            var name = this.dataset.name;
            if (typeof alertify !== 'undefined') {
                alertify.confirm("Confirm mark of active speaker activities as Reviewed", function (e) {
                    if (e)
                        ReviewStatus(dataID, name);
                });
            }
            else {
                var r = confirm("Confirm mark of active speaker activities as Reviewed");
                if (r == true)
                    ReviewStatus(dataID, name);
            }
        });

        $(document).on('click', '.cmdReset', function () {
            var dataID = this.dataset.id;
            var name = this.dataset.name;
            if (typeof alertify !== 'undefined') {
                alertify.confirm("Confirm reset of active speaker activities to Interested", function (e) {
                    if (e)
                        ResetStatus(dataID, name);
                });
            }
            else {
                var r = confirm("Confirm reset of active speaker activities to Interested");
                if (r == true)
                    ResetStatus(dataID, name);
            }
        });

        $(document).on('click', '.lnkhistory', function () {
            var data = {
                AccountSession: this.dataset.acsp,
                PendingAccount: this.dataset.id,
                EID: $('#F_intSpkrCurEventPKey').val(),
            }
            $('#AccountSessionPKey').val(this.dataset.acsp);
            $('#PendingAccountPKey').val(this.dataset.id);
            $('#lblCStatusTitle').text("Note for " + this.dataset.name);
            function SuccessResultUpdate(result) {
                if (result !== null && result !== "ERROR" && result.msg !== "") {
                    if (result.msg === "OK") {
                        var grid = $("#gridComments").data("kendoGrid");
                        grid.dataSource.data(result.data);
                        $('#rwCommentHistory').modal('show');
                    }
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching history");
                CommonFunctions.LoadingStop();
            }
            CommonFunctions.AjaxasyncCall("POST", '/Operations/lnkhistory', data, "JSON", SuccessResultUpdate, "");
        });

        $('#btnSaveFlag2').click(function () {
            var dataID = $('#Flag2Data').val();
            var data = {
                SpkrFlagId: $('#dFlag2').data("kendoDropDownList").value(),
                PID: dataID,
                EID: $('#F_intSpkrCurEventPKey').val(),
                FlagComments: $('#txtFlagComments2').val()
            };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/SaveFlag2Comments', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg !== "OK")
                    CommonFunctions.Alert(result.msg);
                else {
                    SpeakerGridRefresh();
                    $('#RdFlag2').modal('hide');
                }
            }
            else
                CommonFunctions.Alert("Error occurred while updating flag");
        });

        $('#cmdSpkDelCom').click(function (e) {
            e.preventDefault();
            var data = {
                AccountSession: $('#AccountSessionPKey').val(),
                CommentpKey: $('#SelectedCommentKeys').val(),
                EventPkey: $('#F_intSpkrCurEventPKey').val(),
            }
            function SuccessResultUpdate(result) {
                if (result !== null && result !== "ERROR" && result.msg !== "") {
                    if (result.msg === "OK") {
                        var dataInfo = {
                            AccountSession: $('#AccountSessionPKey').val(),
                            PendingAccount: $('#PendingAccountPKey').val(),
                            EID: $('#F_intSpkrCurEventPKey').val(),
                        }
                        function SuccessResultGrid(result) {
                            if (result !== null && result !== "ERROR" && result.msg !== "") {
                                if (result.msg === "OK") {
                                    var grid = $("#gridComments").data("kendoGrid");
                                    grid.dataSource.data(result.data);
                                }
                            }
                            else
                                CommonFunctions.Alert("Error occurred while fetching history");
                            CommonFunctions.LoadingStop();
                        }
                        CommonFunctions.AjaxasyncCall("POST", '/Operations/lnkhistory', dataInfo, "JSON", SuccessResultGrid, "");
                    }
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching history");
                CommonFunctions.LoadingStop();
            }
            CommonFunctions.AjaxasyncCall("POST", '/Operations/CommentDelete', data, "JSON", SuccessResultUpdate, "");
        });

        $(document).on('click', '.cmdStatusLink', function () {
            $('#lblStatusTitle').text("Status for " + this.dataset.sid);
            $('#lblStatusName').text(this.dataset.name);
            $("#checkIsSlide,#checkOfferLeader,#checkOfferMod,#checkIsLeader,#checkIsModu").hide();
            $('#tdDueDate,#trrddatetimepicker,#cmdStatusSaveWithoutEmailSave,#phIsAssigned,#txtDueDate').hide();
            var nextfollowdate = this.dataset.date;
            var Data = { AccountID: this.dataset.id, EventAcc: this.dataset.evtacc, NextFollowUpdate: nextfollowdate, AccountSession: this.dataset.acsp, ckTime: $('#ckTime').is(":checked"), SpeakerEvtID: $('#F_intSpkrCurEventPKey').val(), ddSessStatus: $("#ddSesStatus").data("kendoDropDownList").value() };
            $('#hdfSAccountID').val(this.dataset.id);
            $('#hdfSAccountSession').val(this.dataset.acsp);
            $('#hdfSSessionID').val(this.dataset.sp);
            $('#hdfAccoutStatusID').val(this.dataset.statusId);
            $('#hdfAccoutNameVal').val(this.dataset.name);
            $('#hdfValESPK').val(this.dataset.espk);
            $('#hdfSID').val(this.dataset.sid);
            $('#hdfEventAcc').val(this.dataset.evtAcc);
            $('#hdfEventAcc').val(this.dataset.haveSlide);
            var resultData = CommonFunctions.AjaxCall('GET', '/Operations/GetSessionListDataByID', Data, 'json', 'Error Occurred while Fetching List');
            if (resultData !== "ERROR" && resultData.msg === "OK") {
                $("#ddEditStatus").data("kendoDropDownList").value(resultData.intPendingStatusPKey);
                $('#txttakehomeLession').val(resultData.strHomeLesson);
                $('#cmdStatusSave').text(resultData.strtext);
                $('#cmdFinish,#cmdStatusSaveWithoutEmailSave').text(resultData.strFinish);
                $('#txtStatusComment').val(resultData.lblval);
                $('#dpTimeStatus').val(resultData.dpTime);
                $('#cmdStatusSave').attr("style", "cursor:pointer");
                $("#ddSpeakerContact").data("kendoDropDownList").value($('#intMAGIContactPKey').val());
                $('#chkIsSlide').prop("checked", resultData.chkIsSlideChecked);
                $('#chkIsLeader').prop("checked", resultData.chkIsLeaderChecked);
                $('#chkIsModu').prop("checked", resultData.chkIsModuChecked);
                $('#chkIsLeader').prop("disabled", !resultData.chkIsLeaderEnabled);
                $('#chkIsModu').prop("disabled", !resultData.chkIsModuEnabled);
                $('#txtDueDate').val(resultData.DueDate);
                if (resultData.phIsAssigned)
                    $('#phIsAssigned').show();
                if (resultData.chkIsSlideVisible)
                    $('#checkIsSlide').show();
                if (resultData.chkIsLeaderVisible)
                    $('#checkIsLeader').show();
                if (resultData.chkIsModuVisible)
                    $('#checkIsModu').show();
                if (resultData.chkOfferModVisible)
                    $('#checkOfferMod').show();
                if (resultData.chkOfferLeaderVisible)
                    $('#checkOfferLeader').show();

                if (resultData.tdDueDate) {
                    $('#tdDueDate').show();
                    $('#dpSlideduedate').val(resultData.DueDate);
                }

                if (resultData.trrddatetimepicker) {
                    $('#txtrddatetimepicker').val(resultData.txtrddatetimepicker);
                    $('#trrddatetimepicker').show();
                }

                if (resultData.cmdStatusSave !== "Save") {
                    $('#cmdStatusSave').attr("style", "background-color:yellow;cursor:pointer");
                }
                if (resultData.cmdStatusSaveWithoutEmailSave)
                    $('#cmdStatusSaveWithoutEmailSave').show();

                $('#hdfSHaveSlides').val(resultData.HaveSlide);
                $('#rwStatus').modal('show');
            }
        });

        function GridHistory() 
        {
            function SuccessGridHistory(result) 
            {
                if (result !== null && result !== "ERROR" && result.msg !== "") 
                {
                    if (result.msg === "OK") 
                    {
                        var grid = $("#dgHistory").data("kendoGrid");
                        grid.dataSource.data(result.data);
                        $('#rwHistory').modal('show');
                    }
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching history");
                CommonFunctions.LoadingStop();
            }
            var dataInfo = { PendingAcct: $('#hdfAcID').val(), chkFlaghistory: $('#chkFlaghistory').is(":checked") };
            CommonFunctions.AjaxasyncCall("GET", '/Operations/GetHistory', dataInfo, "JSON", SuccessGridHistory, "");
        }

        $(document).on('click', '.cmdHistory', function () {
            $('#chkFlaghistory').prop("checked", true);
            var id = this.dataset.id;
            var name = this.dataset.name;
            $('#lblrwHistory').text("History for " + name);
            $('#hdfAcID').val(id);
            GridHistory();
        });

        $(document).on('click', '.cmdFlagHistory', function () {
            var id = this.dataset.id;
            var name = this.dataset.name;
            $('#lblrwFlagHistory').text("Flag history for " + name);
            function SuccessGridHistory(result) {
                if (result !== null && result !== "ERROR" && result.msg !== "") {
                    if (result.msg === "OK") {
                        var grid = $("#rdFlag").data("kendoGrid");
                        grid.dataSource.data(result.data);
                        $('#rwFlag').modal('show');
                    }
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching history");
                CommonFunctions.LoadingStop();
            }
            CommonFunctions.AjaxasyncCall("GET", '/Operations/GetFlagHistory', { PendingAcct: id }, "JSON", SuccessGridHistory, "");
        });

        $(document).on('click', '.cmdProducerReport', function () {
            var id = this.dataset.id;
            var name = this.dataset.name;
            $('#lblPRAccount').text(name);
            $('#lblProducerReport').text("None");
            if (id !== "")
                $('#lblProducerReport').text("None");

            $('#hdfPAcc').val(this.dataset.acid);
            var checkVal = id.replaceAll('<', ',').replaceAll('>', '').substring(1);
            $("#ckProducerReview").data("kendoCheckBoxGroup").value(checkVal.split(','));
            $('#rwProducerReport').modal('show');
        });

        $('#chkFlaghistory').change(function () {
            GridHistory();
        });

        function hideDate(conditions) {
            if (conditions == false)
                $('#tdDueDate').hide();
            else
                $('#tdDueDate').show();
        }

        function ConfirmCantCreate() {
            var isSlide = $('#chkIsSlide').is(':checked');
            if (!isSlide) {
                hideDate(false);
                alertify.set({ labels: { ok: "Yes", cancel: "No" } });
                alertify.confirm("Confirm that this speaker will not have slides.", function (e) {
                    if (e) { return true; } else {
                        $('#chkIsSlide').prop("checked", true);
                        hideDate(true);
                        return false;
                    }
                });
                alertify.set({ labels: { ok: "OK", cancel: "Cancel" } });
            }
            else
                hideDate(true);
        }

        $('#cmdStatusSave').click(function (e) {
            e.preventDefault();
            if ($("#ddEditStatus").data("kendoDropDownList").value() === "19") {
                if ($("#ddSpeakerContact").data("kendoDropDownList").selectedIndex === 0) {
                    CommonFunctions.Alert("Select speaker contact.");
                    return false;
                }
                if ($('#chkIsSlide').is(':checked')) {
                    if (document.getElementById('tdDueDate').hidden && $('#dpSlideduedate').val().Trim() === "") {
                        CommonFunctions.Alert("Fill due date for slides.");
                        ConfirmCantCreate();
                        return false;
                    }
                }
                if ($('#txtrddatetimepicker').val() === "") {
                    CommonFunctions.Alert("Enter follow-up date.");
                    ConfirmCantCreate();
                    return false;
                }

            }
        });

        $('#cmdPrReport').click(function () {
            var reviewVal = $("#ckProducerReview").data("kendoCheckBoxGroup").value();
            var infoReview = "";
            if (reviewVal.length > 0)
                infoReview = $("#ckProducerReview").data("kendoCheckBoxGroup").value().join(',');
            var data = {
                PendingAcct: $('#hdfPAcc').val(),
                Review: infoReview
            }
            var result = CommonFunctions.AjaxCall('POST', '/Operations/cmdPrReportClick', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR") {
                if (result.msg === "OK") {
                    SpeakerGridRefresh();
                    $('#rwProducerReport').modal('hide');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating problems");
            }
            else
                CommonFunctions.Alert("Error occurred while updating problems");
        });

        $(document).on('click', '.cmdView', function () {
            var feed = this.dataset.feed;
            var rating = this.dataset.rating;
            var id = this.dataset.id;
            if (!(feed && rating))
                CommonFunctions.Alert("This person has no posted feedback");
            else {
                var result = CommonFunctions.AjaxCall('Get', '/Operations/SpeakerFeedback', { PendingAcct: id }, 'json', 'Error Occurred');
                if (result === "OK")
                    window.location.replace("/MyFeedback");
            }
        });

        $(document).on('click', '.btnflag', function () {
            var result = CommonFunctions.AjaxCall('POST', '/Operations/ToggleFeatured', { PendingAcct: this.dataset.id, PrioritySpkr: this.dataset.spk }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK")
                    SpeakerGridRefresh();
                else
                    CommonFunctions.Alert("Error occurred while updating problems");
            }
            else
                CommonFunctions.Alert("Error occurred while updating problems");
        });

        $(document).on('click', '.lnkNoteHistory', function () {
            var eaid = this.dataset.eaid;
            var id = this.dataset.id;
            var name = this.dataset.name;
            $('#lblNoteLogTitle').text("Notes for " + name);
            $('#hdfNoteAcctPKey').val(id);
            $('#hdfNoteID').val(0);
            var result = CommonFunctions.AjaxCall('Get', '/Operations/NotesHistoryUpdate', { PendingAcct: id, EventID: $('#F_intSpkrCurEventPKey').val() }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    $('#txtNotePre').val(result.PreviousEdit);
                    var gridInfo = $("#dgNotes").data("kendoGrid");
                    gridInfo.dataSource.data(result.data);
                    $('#rwNoteList').modal('show');
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching result");
            }
            else
                CommonFunctions.Alert("Error occurred while fetching result");
        });

        function RefreshNotes() {
            var result = CommonFunctions.AjaxCall('Get', '/Operations/NotesHistoryUpdate', { PendingAcct: $('#hdfNoteAcctPKey').val(), EventID: $('#F_intSpkrCurEventPKey').val() }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    $('#txtNotePre').val(result.PreviousEdit);
                    var gridInfo = $("#dgNotes").data("kendoGrid");
                    gridInfo.dataSource.data(result.data);
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching result");
            }
            else
                CommonFunctions.Alert("Error occurred while fetching result");
        }

        function UpdateSaveNote(noteID, TextNotes, hideModel) {
            var data = { PendingAcct: $('#hdfNoteAcctPKey').val(), EventID: $('#F_intSpkrCurEventPKey').val(), PendingNotePKey: noteID, NoteText: TextNotes };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/SaveNotes', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    RefreshNotes();
                    if (hideModel)
                        $('#rwNote').modal('hide');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating notes");
            }
            else
                CommonFunctions.Alert("Error occurred while updating notes");
        }

        $('#btnNoteSave').click(function (e) {
            e.preventDefault();
            UpdateSaveNote(0, $('#txtNotePre').val(), false);
        });

        $('#cmdNoteSave').click(function (e) {
            e.preventDefault();
            UpdateSaveNote($('#hdfNoteID').val(), $('#txtNoteEdit').val(), true);
        });

        function DeleteNotes() {
            var result = CommonFunctions.AjaxCall('POST', '/Operations/DeleteSelectedNotes', { PendingAcct: $('#hdfNoteAcctPKey').val(), pKeys: $('#SelectedNoteKeys').val() }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK")
                    RefreshNotes();
                else
                    CommonFunctions.Alert("Error occurred while updating problems");
            }
            else
                CommonFunctions.Alert("Error occurred while updating problems");
        }

        $('#cmdNoteDelete').click(function () {
            if (typeof alertify !== 'undefined') {
                alertify.confirm("Confirm deletion of the selected notes.", function (e) {
                    if (e)
                        DeleteNotes();
                });
            }
            else {
                var r = confirm("Confirm deletion of the selected notes.");
                if (r == true)
                    DeleteNotes();
            }
        });

        $(document).on('click', '.imgExpress', function () {
            $('#cmdExpressSave1').hide();
            $('#cmdExpressSave').show();
            var id = this.dataset.id;
            var name = this.dataset.name;
            $('#hdfExpressID').val(id);
            $('#hdfExpressName').val(name);
            $('#lblExpress').text("Event Interests for: " + name);
            $('#phExpList').show();
            $('#phSesToAdd').hide();
            $('#ckPrioritySpkr').prop('checked', this.dataset.pspk);
            var result = CommonFunctions.AjaxCall('POST', '/Operations/ImgExpressClick', { PendingAcct: id }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    var List = [];
                    var checkedValue = [];
                    $.each(result.data, function (val, i) {
                        List.push({ enabled: true, encoded: false, label: i.EventID, value: i.pKey, cssClass: "me-2", });
                        if (i.bChecked)
                            checkedValue.push(i.pKey);
                    });
                    var checkBoxGroup = $("#ckExpressList").kendoCheckBoxGroup({
                        items: List,
                        layout: "horizontal",
                        value: checkedValue,
                    }).data("kendoCheckBoxGroup");

                    if (checkedValue.length > 0)
                        checkBoxGroup.value(checkedValue);
                    else
                        checkBoxGroup.value("");
                    $('#rwExpress').modal('show');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating problems");
            }
            else
                CommonFunctions.Alert("Error occurred while updating problems");
        });

        $('#cmdExpressSave').click(function (e) {
            e.preventDefault();

            var SelectedValue = "";
            if ($("#ckExpressList").data("kendoCheckBoxGroup").value().length > 0)
                SelectedValue = $("#ckExpressList").data("kendoCheckBoxGroup").value().join(',');
            var data = {
                PendingID: $('#hdfExpressID').val(),
                strPendingAcctName: $('#hdfExpressName').val(),
                ckPrioritySpkr: $('#ckPrioritySpkr').is(":checked"),
                ckExpressList: SelectedValue
            };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/cmdExpressSaveClick', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    $('#cmdExpressSave').hide();
                    $('#cmdExpressSave1').show();
                    SpeakerGridRefresh();
                    $('#rwExpress').modal('hide');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating events interest");
            }
            else
                CommonFunctions.Alert("Error occurred while updating events interest");
        });

        $('#btnFollowRightSave').click(function (e) {
            e.preventDefault();
            var data = {
                PendingID: $('#hdFURAccount').val(),
                ddFollowUpAccount: $('#ddFollowUpAccount').data("kendoDropDownList").value(),
                EventID: $('#F_intSpkrCurEventPKey').val(),
                strFollowUp: $('#ddFollowUpAccount').data("kendoDropDownList").text()
            };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/FollowRightSave', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    SpeakerGridRefresh();
                    $('#rwFollowUpRights').modal('hide');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating events interest");
            }
            else
                CommonFunctions.Alert("Error occurred while updating events interest");
        });

        $(document).on('click', '.lnkProfileBio', function () {
            var id = this.dataset.id;
            var LN = this.dataset.last;
            var FN = this.dataset.first;
            $('#hdfBioAccount').val(id);
            $('#lblBioHeading').text("Details for " + (LN == "", "", LN + ", ") + FN);
            var result = CommonFunctions.AjaxCall('Get', '/Operations/GetProfileBio', { PendingID: id }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    $('#txtProfileComment').val(result.ProfileComment);
                    $('#lblBios').text(result.lblBios);
                    $('#txtPersonalBioview').val(result.PersonalBioview);
                    $('#txtAboutview').val(result.Aboutview);
                    $('#hlCV').attr("href", result.hlcvNavigateUrl);
                    $('#hlCV').attr("style", ((result.hlCVEnabled) ? "text-decoration:none;" : "pointer-events:none;text-decoration:none;"));
                    $('#hlCV').text(result.hlCV);
                    $('#RdPersonalInfo').modal('show');
                }
                else
                    CommonFunctions.Alert("Error occurred while fetching result");
            }
            else
                CommonFunctions.Alert("Error occurred while fetching result");
        });

        $('#btnSaveBio').click(function (e) {
            e.preventDefault();
            var data = {
                PendingID: $('#hdfBioAccount').val(),
                PersonalBioview: $('#txtPersonalBioview').val(),
                Aboutview: $('#txtAboutview').val(),
                ProfileComment: $('#txtProfileComment').val()
            };
            var result = CommonFunctions.AjaxCall('Get', '/Operations/SaveBioInfo', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK")
                    $('#RdPersonalInfo').modal('hide');
                else
                    CommonFunctions.Alert(result.msg);
            }
            else
                CommonFunctions.Alert("Error occurred while updating bio");

        });

        $(document).on('click', '.imgAddInt', function () {
            var id = this.dataset.id;
            var name = this.dataset.name;
            $('#cmdExpressSave,#phExpList').hide();
            $('#cmdExpressSave1,#phSesToAdd').show();
            $('#hdfExpressID').val(id);
            $('#hdfExpressName').val(name);
            $('#txtSesToAdd').val("");
            $('#lblExpress').text("Add Activity to Interests " + name);
            var result = CommonFunctions.AjaxCall('POST', '/Operations/ImgAddInterestClick', { PendingAcct: id, EventID: $('#F_intSpkrCurEventPKey').val() }, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    var resultData = JSON.parse(result.data);
                    $('#ddSecActivity').data("kendoDropDownList").dataSource.data(resultData);
                    $('#rwExpress').modal('show');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating problems");
            }
            else
                CommonFunctions.Alert("Error occurred while updating problems");
        });

        $('#cmdExpressSave1').click(function (e) {
            e.preventDefault();
            var data = {
                PendingID: $('#hdfExpressID').val(),
                pendingName: $('#hdfExpressName').val(),
                EventID: $('#F_intSpkrCurEventPKey').val(),
                ddSecActivity: $('#ddSecActivity').data("kendoDropDownList").value(),
                ddSecActivityText: $('#ddSecActivity').data("kendoDropDownList").text(),
            };
            var result = CommonFunctions.AjaxCall('POST', '/Operations/cmdExpressSave1Click', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    SpeakerGridRefresh();
                    $('#cmdExpressSave,#cmdExpressSave1').hide();
                    $('#rwExpress').modal('hide');
                }
                else
                    CommonFunctions.Alert("Error occurred while updating events interest");
            }
            else
                CommonFunctions.Alert("Error occurred while updating events interest");
        });
        function StatusSave(EmailSend) {
            var dlOtherSession = [], dlOtherSpot = [];
            if ($('#dlOtherSpot').children('input').length > 0) {
                $.each($('#dlOtherSpot').children('input'), function (i, val) {
                    var d =
                    {
                        Account_pkey: val.dataset.id,
                        EventSession_pkey: val.dataset.esp,
                        SessionID: val.dataset.sid,
                        AccountSession_pKey: val.dataset.acsp,
                        chkActivity: $('#chkActivity_' + val.dataset.acsp).is(":checked"),
                        chkRemove: $('#chkRemove_' + val.dataset.acsp).is(":checked")
                    };
                    dlOtherSpot.push(d);
                });
            }

            if ($('#dlOtherSession').children('input').length > 0) {
                $.each($('#dlOtherSession').children('input'), function (i, val) {
                    var d1 =
                    {
                        Account_pkey: val.dataset.id,
                        EventSession_pkey: val.dataset.esp,
                        SessionID: val.dataset.sid,
                        AccountSession_pKey: val.dataset.acsp,
                        chkActivity: $('#chkSActivity_' + val.dataset.acsp).is(":checked"),
                        CommentsUpdate: $('#textarea_' + val.dataset.acsp).val()
                    };
                    dlOtherSession.push(d);
                });

            }

            var data = {
                intPendingEventAcctPKey: $('#hdfEventAcc').val(),
                intPendingAcctPKey: $('#hdfSAccountID').val(),
                intSpkrCurEventPKey: $('#F_intSpkrCurEventPKey').val(),
                intStatus_pkey: $("#ddEditStatus").data("kendoDropDownList").value(),
                intPendingAcctSesPKey: $('#hdfSAccountSession').val(),
                Session_pKey: $('#hdfSSessionID').val(),
                strDueDate: $('#txtDueDate').val(),
                ddEditStatusSelected: $("#ddEditStatus").data("kendoDropDownList").text(),
                strComment: $('#txtStatusComment').val(),
                dpTime: $('#dpTimeStatus').val(),
                SendEmail: EmailSend,
                chkRemoveEvent: $('#chkRemoveEvent').is(":checked"),
                chkCharge: $('#chkCharge').is(":checked"),
                txtDueDateVisible: $('#tdDueDate')[0].hidden,
                txtrddatetimepickerVisible: $('#trrddatetimepicker')[0].hidden,
                chkRemoveSlide: $('#chkRemoveSlide').is(":checked"),
                chkIsSlide: $('#chkIsSlide').is(":checked"),
                chkCancelRef: $('#chkCancelRef').is(":checked"),
                chkIsLeader: $('#chkIsLeader').is(":checked"),
                chkOfferLeader: $('#chkOfferLeader').is(":checked"),
                chkIsModu: $('#chkIsModu').is(":checked"),
                chkOfferMod: $('#chkOfferMod').is(":checked"),
                ddSpeakerContact: $("#ddSpeakerContact").data("kendoDropDownList").value(),
                ddSpeakerContactText: $("#ddSpeakerContact").data("kendoDropDownList").text(),
                intPendingStatusPKey: $('#hdfAccoutStatusID').val(),
                strPendingAcctName: $('#hdfAccoutNameVal').val(),
                txtrddatetimepicker: $('#txtrddatetimepicker').val(),
                strNewStatus: $("#ddEditStatus").data("kendoDropDownList").text(),
                strPendingSessionName: $('#hdfSID').val(),
                intPendingEvtSesPKey: $('#hdfValESPK').val(),
                ddSpeakerContactIndex: $("#ddSpeakerContact").data("kendoDropDownList").select(),
                HaveSlide: $('#hdfHaveSlide').val(),
                strHomeLesson: $('#txttakehomeLession').val(),
                intEditMode: 0,
                intCommentHpKey: 0,
                MyProperty: "",
                dlOtherSpot: dlOtherSpot,
                dlOtherSession: dlOtherSession
            };

            if ($("#ddEditStatus").data("kendoDropDownList").value() === 19 && $("#ddSpeakerContact").data("kendoDropDownList").select() === 0) {
                CommonFunctions.Alert("Select speaker contact.");
                return false;
            }
            var result = CommonFunctions.AjaxCall('POST', '/Operations/StatusSaveClick', data, 'json', 'Error Occurred');
            if (result !== null && result !== "ERROR" && result.msg !== "") {
                if (result.msg === "OK") {
                    SpeakerGridRefresh();
                }
                else if (result.msg === "refresh") {
                    SpeakerGridRefresh();
                    $('#rwStatus').modal('hide');
                }
                else
                    CommonFunctions.Alert(result.msg);
            }
            else
                CommonFunctions.Alert("Error occurred while updating events interest");
        }
        $('#cmdStatusSaveWithoutEmailSave').click(function (e) {
            e.preventDefault();
            StatusSave(false);
        });
        $('#cmdStatusSave').click(function (e) {
            e.preventDefault();
            StatusSave(true);
        });

    });
</script>
<script type="text/javascript">
    function UpdateGridDataSuccess(result) {
        if (result !== null && result !== "ERROR" && result.msg !== "") {
            if (result.msg === "OK") {
                var grid = $("#dgSpkrLog").data("kendoGrid");
                grid.dataSource.data(result.data);
            }
        }
        CommonFunctions.LoadingStop();
    }
    function onChangeddCallNext(e) {
        var index = $('#ddCallNext').data("kendoDropDownList").selectedIndex;
        if (index >= 4) {
            $('#dFlag').data("kendoDropDownList").value($("dFlagSelected").val());
            $('#txtFlagComments').val($("dFlagSelected").data("selCom"));
            $('#RdFlagComments').modal('show');
        }
        else {
            var value = $('#ddCallNext').data("kendoDropDownList").value();
            var noc = $('#CallActionID').data("noc");
            var nca = $('#CallActionID').data("nca");
            var nfu = $('#CallActionID').data("nfu");

            var phFollowupVisible = (value !== noc && value !== nca && value !== nfu);
            $('#txtFlagComments').val("");
            if (!phFollowupVisible) {
                $('#phFollowup').hide();
                $('#dFlag').data("kendoDropDownList").value($("dFlagSelected").val());
                $('#txtFlagComments').val($("dFlagSelected").data("selCom"));
                $('#RdFlagComments').modal('show');
            }
            else
                $('#phFollowup').show();
        }

    }

    function onChangedCallResult(e) {
        var index = $('#ddCallResults').data("kendoDropDownList").selectedIndex;
        var value = $('#ddCallResults').data("kendoDropDownList").value();
        $('#dvemail').hide();
        $('#hdfCallResult').val(value);
        $('#btnSendSMSshow').hide();

        if (value === "3") {
            $('#dvemail').show();
            $('#btnSendEmails').text("Send Email");
            $("#rdConVia").data("kendoRadioGroup").value(1);
            /* ddAnnouncement.SelectedValue = myVS.intAnnouncement_pkey*/
            //Dim script As String = "function f(){ OpenModelWindow() ; Sys.Application.remove_load(f);}Sys.Application.add_load(f);"
            //ScriptManager.RegisterStartupScript(Page, Page.GetType(), "key", script, True)
            //OpenModelWindow()
            //BindddAnnouncemnt(ddAnnouncement)
            //ShowActivity()
            //ddAnnouncement.SelectedValue = cLast.intfollowupDefaultAnn
            //If rdSender.SelectedValue = 0 Then
            //BindCtlContac(DirectCast(HttpContext.Current.Session("cAccount"), clsAccount), IntContactPkey:=-1)
            //Else
            //BindCtlContac(DirectCast(HttpContext.Current.Session("cAccount"), clsAccount))
            //End If
            CommonFunctions.Alert("Send Email Module In Progress");
        }
        if (value === "26") {
            /* $('#btnResendemail').click();*/
            CommonFunctions.Alert("Send Email Module In Progress");
        }
        else if (value === "18") {
            $('#btnSendSMSshow').show();
            $('#txtSMS').val("");
            var Signature = CommonFunctions.AjaxCall('GET', '/Operations/GetSMSSignature', '', "JSON", "");
            $('#txtsignature').val(Signature);
            $('#rwSendSMS').modal('show');
        }
    }
    function UpdateSuccess(result) {
        if (result !== null && result !== "ERROR" && result.msg !== "") {
            if (result.msg === "OK") {
                var data = {
                    eaID: $('#DataElement').data("eaid"),
                    PendingID: $('#DataElement').data("id"),
                    AcID: $('#DataElement').data("aid"),
                    followup: false,
                }
                CommonFunctions.AjaxasyncCall('Post', '/Operations/RefreshSpeakerLogs', data, "JSON", UpdateGridDataSuccess, "");
            }
            else
                CommonFunctions.Alert(result.msg);
        }
        else
            CommonFunctions.Alert("Error occurred while deleting data");
        CommonFunctions.LoadingStop();
    }

    function onChangeSpeakerLog(arg) {
        $('#SelectedKeys').val(this.selectedKeyNames().join(","));
    }
    function UpdateValues(result) {
        if (result !== null && result !== "ERROR" && result.msg !== "") {
            if (result.msg === "OK") {
                var dataResult = JSON.parse(result.data);
                if (dataResult != null) {
                    dataResult = dataResult[0];
                    $('#ddCallNext').data("kendoDropDownList").value(dataResult.CallNextAction_pKey);
                    $('#ddCallResults').data("kendoDropDownList").value(dataResult.CallOutcome_pKey);
                    $('#ddResponce').data("kendoDropDownList").value(dataResult.ResponseID);
                    $("#rdConBy").data("kendoRadioGroup").value(dataResult.ContactBy);
                    $("#rdConVia").data("kendoRadioGroup").value(dataResult.FollowupVia);
                    $("#rdConBy").data("kendoRadioGroup").value(dataResult.FollowupBy);
                    $("#rdProducerOnly").data("kendoRadioGroup").value(dataResult.ProducerOnly);
                    $('#txtConMsg').val(dataResult.Comment + ((dataResult.FollowupNotes != "") ? '<br />' + dataResult.FollowupNotes : ""));
                    $('#txtConEMailSubj').val(result.txtConFolEMailSubj);
                    var OptionFollowupType = dataResult.FollowupType_Options.split(",");
                    $("#ckChooseoptions").data("kendoCheckBoxGroup").value(OptionFollowupType);
                    $('#txtConFolEMailSubj').val(result.txtConFolEMailSubj);
                    $('#ddConFolDate').val(result.SelectedDate);
                    $('#ddConDate').val(result.ddConDate);
                    $('#dpTime').val(result.dpTime);
                    $('#cmdCfSave').text("Update");
                    $('#intpKey').val("pKey");
                    $('#cmdClear').show();
                    if (result.checkDetails) {
                        if (dataResult.CallOutcome_pKey == 3)
                            $('#dvemail').show();
                        else
                            $('#dvemail').hide();

                        if ($('#ddCallResults').data("kendoDropDownList").value() == 13 || $('#ddCallResults').data("kendoDropDownList").value() == 14)
                            $('#trConVia').show();
                        else
                            $('#trConVia').hide();
                    }
                }
            }
            else
                CommonFunctions.Alert(result.msg);
        }
        else
            CommonFunctions.Alert("Error occurred while updating data");
        CommonFunctions.LoadingStop();

    }
    function onClickEditButton(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        console.log(dataItem);
        var data = {
            pKey: dataItem.pKey,
            IsEdit: true
        }
        CommonFunctions.AjaxasyncCall('Post', '/Operations/RefreshSpkrLogByID', data, "JSON", UpdateValues, "");
    }


</script>
